Differentially Private Learning of Undirected Graphical Models Using
Collective Graphical Models

Garrett Bernstein 1 Ryan McKenna 1 Tao Sun 1 Daniel Sheldon 1 2 Michael Hay 3 Gerome Miklau 1

Abstract

We investigate the problem of learning discrete,
undirected graphical models in a differentially
private way. We show that the approach of releas-
ing noisy sufﬁcient statistics using the Laplace
mechanism achieves a good trade-off between
privacy, utility, and practicality. A naive learn-
ing algorithm that uses the noisy sufﬁcient statis-
tics “as is” outperforms general-purpose differ-
entially private learning algorithms. However,
it ignores knowledge
it has three limitations:
about the data generating process, rests on un-
certain theoretical foundations, and exhibits cer-
tain pathologies. We develop a more principled
approach that applies the formalism of collec-
tive graphical models to perform inference over
the true sufﬁcient statistics within an expectation-
maximization framework. We show that this
learns better models than competing approaches
on both synthetic data and on real human mobil-
ity data used as a case study.

1. Introduction

Graphical models are a central tool in probabilistic mod-
eling and machine learning. They pair expressive proba-
bility models with algorithms that leverage the graphical
structure for efﬁcient inference and learning. However,
with data collection and modeling growing in importance
in nearly all domains of society, there is increasing demand
to apply graphical models in settings where the underlying
data is sensitive and must be kept private. For example,
consider applying graphical models to analyze electronic
health records, with the goal of guiding public health pol-
icy. How can we derive these useful population-level out-
comes without compromising the privacy of individuals?

1University of Massachusetts Amherst 2Mount Holyoke Col-
lege 3Colgate University. Correspondence to: Garrett Bernstein
<gbernstein@cs.umass.edu>.

Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

Differential privacy is a widely studied formalism for pri-
vate data analysis (Dwork et al., 2006). It provides a statis-
tical privacy guarantee to individuals: the output of a differ-
entially private algorithm is statistically nearly unchanged
even if any single individual’s record is added to or re-
moved from the input data set. The general idea is to care-
fully randomize the algorithm so that the (random) output
does not depend too much on any individual’s data.

Differentially private machine learning cleanly addresses
the problem of extracting useful population-level models
from data sets while protecting the privacy of individuals.
Indeed, this is an active and important research area (see
Section 1.1), which includes private learning algorithms
for a variety of general frameworks and speciﬁc machine
learning models. This paper addresses the problem of pri-
vately learning parameters in a widely used class of proba-
bilistic models: discrete, undirected graphical models. Al-
though our problem can be cast in terms of general private
learning frameworks, these do not lead to practical algo-
rithms. Previous work also addresses private learning for
directed graphical models (J. Zhang et al., 2014; Z. Zhang
et al., 2016). Our problem of learning in undirected mod-
els, which are not locally normalized, is more general and
substantially harder computationally.

To learn accurate models under differential privacy, it is
critical to randomize the algorithm “just enough” to achieve
the desired privacy guarantee without diminishing the qual-
ity of the learned model too much. This is usually done by
modifying a learning algorithm to add noise to some inter-
mediate quantity X, with the noise magnitude calibrated to
the sensitivity of X, a measure of how much X can depend
on any single individual’s data in the worst case (Dwork
et al., 2006). The randomization renders the noisy esti-
mate of X safe for release; all subsequent calculations us-
ing the noisy X, but not the original data, are also safe.
Where should noise be injected into a machine learning al-
gorithm to achieve the best utility? We highlight two high-
level goals:
(1) Noise should be added at an “information
bottleneck”, so the sensitivity is as small as possible rela-
tive to the information being sought,1 (2) noise should be

1Sensitivity scales with the number of measurements; all else

equal, a lower dimensional quantity will have lower sensitivity.

Differentially Private Learning of Graphical Models

added to a quantity for which the sensitivity can be bounded
tightly, so the noise magnitude can be kept as small as pos-
sible. These two principles are often at odds. For example,
adding noise to the ﬁnal learned parameters θ (known as
output perturbation; Dwork et al., 2006), is appealing from
the information bottleneck standpoint, but if the learning
algorithm is complex we may not be able to analyze the
sensitivity and would have to rely on a coarse bound. In-
deed, general private learning frameworks bound the sensi-
tivity using quantities such as Lipschitz, strong-convexity,
and smoothness constants (Bassily et al., 2014; Wu et al.,
2016) or diameter of the parameter space (Smith, 2008),
which may be loose in practice.

In this paper we will take the approach of adding noise
to the sufﬁcient statistics of a graphical model using the
Laplace mechanism, a high-level approach that has also
been applied recently for directed models (Zhang et al.,
2016; Foulds et al., 2016). This has a number of advan-
tages. First, sufﬁcient statistics, by deﬁnition, are an infor-
mation bottleneck. Second, it is very easy to exactly ana-
lyze the sensitivity of sufﬁcient statistics in graphical mod-
els, which are contingency tables. Third, adding Laplace
noise to contingency tables prior to release is very simple,
so it is reasonable to imagine adoption in practice, say, by
public agencies.

However, it is not entirely clear how to learn parameters
of a graphical model with noisy sufﬁcient statistics. One
option, which we will refer to as naive MLE, is to ignore
the noise and conduct maximum-likelihood estimation as
if we had true sufﬁcient statistics. This works reasonably
well in practice, and is competitive with or better than state-
of-the-art general-purpose methods. In fact, we will show
that naive MLE is consistent and achieves the same asymp-
totic mean-squared error as non-private MLE. However, at
reasonable sample sizes the error due to privacy is signif-
icant, and the approach has several pathologies (see also
Yang et al., 2012; Karwa et al., 2014; 2016), some of which
make it difﬁcult to apply in practice. Therefore, we adopt
a more principled approach of performing inference about
the true sufﬁcient statistics within an expectationmaximiza-
tion (EM) learning framework.

The remaining problem is how to conduct inference over
sufﬁcient statistics of a graphical model given noisy ob-
servations thereof. This is exactly the goal of inference
in collective graphical models (CGMs; Sheldon & Diet-
terich, 2011), and we will adapt CGM inference techniques
to solve this problem. Put together, our results signiﬁcantly
advance the state-of-the-art for privately learning discrete,
undirected graphical models. We clarify the theory and
practice of naive MLE. We show that it learns better models
than existing state-of-the-art approaches in most scenarios
across a broad range of synthetic tasks, and in experiments

modeling human mobility from wiﬁ access point data. We
then show the more principled approach of conducting in-
ference with CGMs is superior to competing approaches in
nearly all scenarios.

1.1. Related Work

Differential privacy has been applied to many areas of ma-
chine learning, including learning speciﬁc models such as
logistic regression (Chaudhuri & Monteleoni, 2009), sup-
port vector machines (Rubinstein et al., 2009), and deep
neural networks (Abadi et al., 2016); privacy in general
frameworks such as empirical risk minimization (ERM;
Chaudhuri et al., 2011; Kifer et al., 2012; Jain & Thakurta,
2013; Bassily et al., 2014), gradient descent (Wu et al.,
2016), and parameter estimation (Smith, 2011); and theo-
retical analysis of what can be learned privately (e.g., Blum
et al., 2005; Kasiviswanathan et al., 2011).

A key aspect of our work is conducting probabilistic in-
ference over data or model parameters given knowledge of
the probabilistic privacy mechanism and its output. Karwa
et al. (2014; 2016) take a similar approach but for ex-
ponential random graph models, as do Williams & Mc-
Sherry (2010), but for the factored exponential mecha-
nism. Because sufﬁcient statistics of graphical models are
contingency tables, our work connects to the well-studied
problem of releasing differentially private contingency ta-
bles (Barak et al., 2007; Yang et al., 2012; Hardt et al.,
2012); we adopt the Laplace mechanism because it is sim-
ple and ﬁts well within our learning framework.

We highlight connections between CGMs and differential
privacy and adopt existing inference techniques for CGMs.
In general, the inference problems we wish to solve are
NP-hard (Sheldon et al., 2013), but a number of efﬁcient
approximate inference algorithms are available (Liu et al.,
2014; Sun et al., 2015; Vilnis et al., 2015). In a paper that
was primarily about CGM inference, Sun et al. (2015) con-
ducted a case study using CGMs to privately learn Markov
chains; we build on this approach, which was limited in
scope and did not address general graph structures.

Our work connects to an active current line of work on
private probabilistic inference, some of which directly ad-
dresses learning in directed graphical models, but not the
more challenging problem of learning in undirected graph-
ical models. Several closely related approaches, which we
refer to as One Posterior Sampling (OPS), show that a sin-
gle sample drawn from a posterior distribution is differen-
tially private (Dimitrakakis et al., 2014; Wang et al., 2015;
Zhang et al., 2016). This can be understood as applying the
exponential mechanism to the log-likelihood function, and
can provide a point estimate for graphical model parame-
ters (Zhang et al., 2016). To apply OPS, one must sam-
ple from the posterior over parameters, p(Θ|X), which is

Differentially Private Learning of Graphical Models

straightforward for directed graphical models with conju-
gate priors, but not in undirected models, where posteriors
over parameters are usually intractable. Zhang et al. (2016)
and Foulds et al. (2016) also developed fully Bayesian
methods using Laplace noise-corrupted sufﬁcient statistics
to update posterior parameters. Similar considerations ap-
ply to this approach, which matches ours in that it uses the
same data release mechanism, but, like OPS, requires con-
jugate priors and thus easily applies only to directed graph-
ical models. Wang et al. (2015) also describe MCMC ap-
proaches to draw many private samples from a posterior
distribution; this is another general framework that could
apply to our problem, but, it relies on loose sensitivity
bounds and since we only request point estimates, it would
waste privacy budget by drawing many samples.

2. Background and Problem Statement

We consider data sets consisting of T discrete attributes
associated with each individual. Let xt ∈ X denote the
value of the tth attribute of an individual; we assume for
simplicity of notation that all variables take values in the
same ﬁnite set X . Let x = (x1, . . . , xT ) denote the com-
plete vector of attributes for an individual, and let X =
(x(1), x(2), . . . , x(N )) denote a data set for an entire popu-
lation of N individuals.

2.1. Differential Privacy

Differential privacy offers strong privacy protection by im-
posing constraints on any algorithm that computes on the
private dataset.
Informally, it requires that an individ-
ual’s data has a bounded effect on the algorithm’s behav-
ior. The formal deﬁnition requires reasoning about all
pairs of datasets that are otherwise identical except one
dataset contains one additional individual’s data vector. Let
nbrs(X) denote the set of datasets that differ from X by at
most one individual’s vector—i.e., if X(cid:48) ∈ nbrs(X), then
X(cid:48) = (x(1), . . . , x(i−1), x(i+1), . . . , x(n)) for some i or
X(cid:48) = (x(1), . . . , x(i), x(cid:48), x(i+1), . . . , x(n)) for some i and
some x(cid:48) ∈ X T .
Deﬁnition 1 (Differential Privacy; Dwork et al., 2006). A
randomized algorithm A satisﬁes ((cid:15), δ)-differential privacy
if for any input X, any X(cid:48) ∈ nbrs(X) and any subset of
outputs S ⊆ Range(A),

Pr[A(X) ∈ S] ≤ exp((cid:15))Pr[A(X(cid:48)) ∈ S] + δ.

When δ = 0, we say that the algorithm satisﬁes (cid:15)-
differential privacy. All of the algorithms we propose sat-
isfy (cid:15)-differential privacy but we compare against some
algorithms that satisfy the weaker condition of ((cid:15), δ)-
differential privacy with non-zero δ.

We achieve differential privacy by injecting noise into the

statistics that are computed on the data. Let f be any func-
tion that maps datasets to Rd. The amount of noise depends
on the sensitivity of f .
Deﬁnition 2 (Sensitivity). The sensitivity of a function f
is deﬁned as ∆f = maxX LSf (X) where LSf denotes
the local sensitivity of f on input X and is deﬁned as
LSf (X) = maxX(cid:48)∈nbrs(X) (cid:107)f (X) − f (X(cid:48))(cid:107)1.

We drop the subscript f when it is clear from context.

Our approach achieves differential privacy through the ap-
plication of the Laplace mechanism.

Deﬁnition 3 (Laplace Mechanism; Dwork et al., 2006).
Given function f that maps datasets to Rd, the Laplace
mechanism is deﬁned as L(X) = f (X) + z where z =
(z1, . . . , zd) and each zi is an i.i.d. random variable from
Laplace(∆f /(cid:15)).

An important property of differential privacy is that any ad-
ditional post-processing on the output cannot weaken the
privacy guarantee.

Proposition 1 (Post-processing; Dwork & Roth, 2014).
Let A be an ((cid:15), δ)-differentially private algorithm that
maps datasets to Rd and let g : Rd → Rd(cid:48)
be an arbitrary
function. Then g ◦ A is also ((cid:15), δ)-differentially private.

2.2. Problem Statement

Our goal is to learn a probabilistic model p(x) from the data
set X while protecting the privacy of individuals. We will
learn probability distributions p(x) that are undirected dis-
crete graphical models (also called Markov random ﬁelds;
Koller & Friedman, 2009). These are deﬁned by a set
of local potential functions of the form ψC(xC), where
C ⊆ {1, . . . , T } is an index set or clique, xC is a sub-
vector of x corresponding to C, and ψC : X |C| → R+
assigns a potential value to each possible xC. The prob-
(cid:81)
ability model is p(x) = 1
C∈C ψC(xC) where C is the
Z
collection of cliques that appear in the model, and Z =
(cid:80)
C∈C ψC(xC) is the normalizing constant or parti-
x
tion function. The graph G with node set V = {1, . . . , T }
and edges between any two indices that co-occur in some
C ∈ C is the independence graph of the model; therefore,
each index set C is a clique in G.

(cid:81)

For learning, it is most convenient to express the model in
log-linear or exponential family form as:

p(x; θ) = exp

I{xC = iC}θC(iC)−A(θ)

.

(cid:41)

(cid:40)

(cid:88)

(cid:88)

C∈C

iC ∈X |C|

(1)
In this expression: I{·} is an indicator function; the vari-
able iC ∈ X |C| denotes a particular setting of the vari-
ables xC; the parameters θC(iC) = log ψC(iC) are log-
potential values; the vector θ ∈ Rd is the concatenation of

Differentially Private Learning of Graphical Models

all parameters; and A(θ) = log Z(θ) is the log-partition
function, with the dependence of Z on the parameters now
made explicit. Note that, for any θ ∈ Rd, the density is
strictly positive: p(x; θ) > 0 for all x. This is true be-
cause the potential values ψC(iC) are strictly positive, so
the log-potentials are ﬁnite.
The goal is to learn parameters ˆθ from the data X in a way
that is (cid:15)-differentially private and such that p(x; ˆθ) is as ac-
curate as possible. We will measure accuracy as Kullback-
Leibler divergence from an appropriate reference distribu-
tion (Kullback & Leibler, 1951). In synthetic experiments,
we will measure the divergence D(cid:0)p(·; θ)(cid:107)p(·; ˆθ)(cid:1), where
p(x; θ) is the true density. For real data, we will measure
(cid:2) log p(x; ˆθ)(cid:3) where q is the
the holdout log-likelihood Eq
empirical distribution of the holdout data, which is equal to
a constant minus D(cid:0)q(cid:107)p(·; ˆθ)(cid:1).

The problem of privately selecting which cliques to include
in the model (i.e., model selection or structure learning) is
interesting but not considered in this paper; we assume the
cliques C are ﬁxed in advance by the modeler.

3. Approach

To develop our approach to privately learn graphical model
parameters, we ﬁrst discuss standard concepts related to
maximum-likelihood estimation for graphical models.

Log-Likelihood, Sufﬁcient Statistics, Marginals. From
i=1 p(cid:0)x(i); θ(cid:1) of
Eq. (1), the log-likelihood L(θ) = log (cid:81)N
the entire data set can be written as

L(θ) =

nC(iC)θC(iC)

− N A(θ)

(cid:34)

(cid:88)

(cid:88)

C∈C

iC ∈X |C|

(cid:35)

i=1

where nC(iC) = (cid:80)N
I{x(i)
C = iC} is a count of how
many times the conﬁguration iC for the variables in clique
C appears in the population. The collection of counts
nC = (cid:0)nC(iC)(cid:1) for all possible iC is the (population) con-
tingency table on clique C. Let n denote the vector con-
catenation of the contingency tables for all cliques. Then
we can rewrite the log-likelihood more compactly as

L(θ) = f (n, θ) := θT n − N A(θ)

(2)

The most common approach for parameter learning in
graphical models is maximum likelihood estimation: ﬁnd
the parameters ˆθ that maximize L(θ). The resulting param-
eter vector ˆθ is a maximum-likelihood estimator (MLE). It
is clear from Eq. (2) that this problem depends on the data
only through the contingency tables n. Indeed, the clique
contingency tables n are sufﬁcient statistics of the model:
they measure all of the information from the data set X that
is relevant for estimating the parameter θ (Fisher, 1922).

The algorithmic approach for maximum-likelihood estima-
tion in graphical models is standard (Koller & Friedman,
2009), and we do not repeat the details here. However,
there are a few concepts that are important for our develop-
ment. The marginals of a graphical model are the marginal
probabilities µC(iC) = p(xC = iC; θ) for all cliques C
and conﬁgurations iC. Let µ be the vector concatenation
of all marginals, and note that µ = Eθ[n]/N . Similarly,
let ˆµ = n/N be the data marginals—these are marginal
probabilities of the empirical distribution of the data.

Marginals play a fundamental role in estimation. First, note
that we can divide Eq. (2) by N to see that the MLE only
depends on the data through the data marginals ˆµ. How-
ever, we leave L(θ) in the current form because it is more
convenient for the CGM development in Section 3.2. Sec-
ond, it is well known that ∇θL(θ) = N ( ˆµ − µ), so max-
imum likelihood estimation seeks to adjust θ so that the
data and model marginals match. Third, it can (almost) al-
ways succeed in doing so, even if the data marginals do not
come from a graphical model. More formally, let M be the
marginal polytope: the set of all vectors µ such that there
exists some distribution q(x) with marginal probabilities µ.

Proposition 2 (Wainwright & Jordan, 2008). For any µ
in the interior of M, there is a unique distribution p(x; θ)
with marginals µ, i.e., such that µ = Eθ[n]/N .

Applying Proposition 2 to the data marginals ˆµ shows that
if these belong to the interior of M, we may learn a dis-
tribution with marginals that match what we observe in the
data. Note that, while the distribution p(x; θ) is unique,
the parameters θ are not, because our model is overcom-
plete. If µ belongs to M but not the interior of M, which
occurs, for example, when some marginals are zero, the sit-
uation is more complex: there is no (ﬁnite) θ ∈ Rd such
that p(x; θ) has marginals µ.2 Similarly, the MLE does not
exist, meaning that its maximum is not attained for any ﬁ-
nite θ (Fienberg & Rinaldo, 2012; Haberman, 1973). This
issue will end up being signiﬁcant in our understanding of
the naive MLE approach in the following section.

3.1. Noisy sufﬁcient statistics

From the development so far, there are two obvious pos-
sibilities for randomizing the learning process to achieve
privacy:

1. (Output perturbation) Find the MLE ˆθ and add Laplace

noise proportional to its sensitivity.

2. (Sufﬁcient statistics perturbation) Add Laplace noise to
the sufﬁcient statistics n, and then conduct maximum-
likelihood estimation.

2However, there is a sequence {θk} where θk ∈ Rd and

E

lim
k→∞

θk [n]/N = µ.

Differentially Private Learning of Graphical Models

The two approaches are similar from an information bot-
tleneck standpoint—the dimensionality of n and ˆθ is the
same. However, the sensitivity of ˆθ is difﬁcult to analyze,
since it requires reasoning about worst-case inputs. It also
may be high due to pathological inputs whose local sensi-
tivity is much higher than that of realistic data sets. On the
other hand, the sensitivity of n is very easy to analyze and
the analysis is tight: the local sensitivity is the same for all
data sets.

Proposition 3. Let n(X) be the sufﬁcient statistics of a
graphical model with clique set C on data set X. The lo-
cal sensitivity of n is |C| for all inputs X. Therefore the
sensitivity of n is |C|.

(Proofs can be found in the supplementary material.) So,
a simple approach to achieve privacy is to release noisy
sufﬁcient statistics y that are obtained after applying the
Laplace mechanism:

yC(iC) = nC(iC) + Laplace(cid:0)|C|/(cid:15)(cid:1)

(3)

Positive results. How can we learn with noisy sufﬁcient
statistics y? A naive approach is to use y in place of n in
maximum-likelihood estimation, i.e., to ﬁnd ˆθ to maximize
f (y, θ). The validity of this approach has been debated in
the literature (Yang et al., 2012). However, it is relatively
easy to show that it behaves well asymptotically.
Proposition 4. Assume x(1), . . . , x(N ) are drawn iid from
a probability distribution with marginals µ. The marginal
estimate ¯µC(iC) = 1
N yC(iC) obtained from the noisy
sufﬁcient statistics is unbiased and consistent, with mean
squared error:

MSE (cid:0)¯µC(iC)(cid:1) =

µC(iC)(cid:0)1 − µC(iC)(cid:1)
N

+

2|C|2
N 2(cid:15)2

(4)

Now let ˆθ ∈ argmaxθ f (y, θ) be parameters estimated us-
ing the noisy sufﬁcient statistics y. If the true distribution
p(x; θ) is a graphical model with cliques C, then the esti-
mated distribution p(x; ˆθ) converges to p(x; θ).

Pathologies. Asymptotically, the noisy sufﬁcient statis-
tics behave as desired in terms of MSE: the O(1/N ) term,
which is due to sampling error and not privacy, domi-
nates for large N . However, for practical settings of (cid:15) the
O(1/N 2) term, which is due to privacy, is dominant until
N becomes very large, due to the large constant 2|C|2/(cid:15)2.
Figure 1(a) illustrates this issue.

A second pathology is that the noise added for privacy
destroys some of the structure expected in the empirical
marginals. The true data marginals ˆµ = n/N belong to
the marginal polytope: in particular, this means that each
clique marginal ˆµC is nonnegative and sums to one, and

that clique marginals agree on common subsets of vari-
ables. After adding noise, the pseudo-marginals ¯µ = y/N
do not belong to the marginal polytope: ¯µ may have neg-
ative values, and does not satisfy consistency constraints.
We ﬁnd that a partial ﬁx is very helpful empirically: project
the pseudo-marginal ¯µC for each clique onto the simplex
prior to conducting MLE, which can be done via a stan-
dard procedure (Duchi et al., 2008). Let ˜µ be the projected
marginals. We now have that ˜µC is a valid marginal for
each clique C, but consistency constraints are not satisﬁed
among cliques, and it is still the case that ˜µ /∈ M. Fig-
ure 1(b) illustrates the beneﬁts of projection on the quality
of the model learned by Naive MLE.

A more signiﬁcant pathology has to do with zeros in the
projected marginals ˜µ, which are more prevalent than in
true data marginals ˆµ. This is because the addition of
Laplace noise creates negative values, which are then trun-
cated to zero during projection. As discussed following
Proposition 2, zero values in the marginals lead to non-
existence of the MLE (Fienberg & Rinaldo, 2012; Haber-
If ˜µC(iC) = 0, the likelihood increases
man, 1973).
monotonically as θC(iC) goes to negative inﬁnity; in other
words, the model attempts to drive the learned marginal
probability to zero. Numerically, we can address this by
regularization, e.g., adding λ(cid:107)θ(cid:107)2 to the objective func-
tion for arbitrarily small λ > 0. However, we may still
learn vanishingly small marginal probabilities, which can
lead to a very large KL-divergence between the true and
learned models. Figure 1(c) illustrates the effect of λ on
KL-divergence with both noisy sufﬁcient statistics and true
sufﬁcient statistics. At high λ (strong regularization), both
methods underﬁt and yield poor KL divergence. Learn-
ing with true sufﬁcient statistics has no tendency to overﬁt;
it achieves good performance for a broad range of λ ap-
proaching zero. Naive MLE with noisy sufﬁcient statistics
overﬁts badly (to zeros) for small λ, and must be tuned “just
right” to achieve reasonable performance.

3.2. Collective Graphical Models

Since learning with noisy sufﬁcient statistics “as-is” has
several pathologies and is less robust than maximum-
likelihood estimation in the absence of privacy, we inves-
tigate a more principled approach, which matches the data
generating process: We treat the true sufﬁcient statistics n
as latent variables, and learn θ to maximize the marginal
likelihood p(y; θ) = (cid:80)
n p(n, y; θ). In this section, we
will develop an EM approach to accomplish this.
In EM, we need to conduct inference to compute E[n | y; θ]
for a ﬁxed value of θ. This is the central problem of
collective graphical models (CGMs) (Sheldon & Diet-
terich, 2011). Consider the joint distribution p(n, y; θ) =
p(n; θ)p(y | n), which we use to compute E[n | y; θ]. The

Differentially Private Learning of Graphical Models

(a)

(b)

(c)

Figure 1. Sample results on synthetic data illustrating behavior of naive MLE (see Section 4.1 for experiment details): (a) MSE of learned
marginals vs population size N on a chain model with T = 10, |X | = 10; reference lines indicate predicted slope for O(1/N ) and
O(1/N 2) error terms, respectively (the function c/N d has slope −d on a log-log plot), (b) effect of projecting marginals on performance
of naive MLE for an Erd˝os-R´eyni graph with T = 10, |X | = 20, (cid:15) = 0.5, (c) effect of regularization on KL-divergence for learning
with and without privacy; chain model with T = 10, |X | = 10, (cid:15) = 0.1.

noise mechanism p(y | n) arises directly from the Laplace
mechanism (see Eq. (3)). The distribution of the sufﬁcient
statistics, p(n; θ), is known as the CGM distribution.
It
can be written in closed form when the model is decom-
posable, i.e., the cliques C correspond to the nodes of some
junction tree T . Although decomposability is a signiﬁcant
restriction, let us assume that such a tree T exists; we will
use the exact results derived for this case to develop an ap-
proximation for the general case. Let S be the set of sep-
arators of T , and let ν(S) be the multiplicity of S ∈ S,
i.e., the number of distinct edges (Ci, Cj) ∈ T for which
S = Ci ∩ Cj. Under these assumptions, the CGM distribu-
tion has the form (Liu et al., 2014):

p(n; θ) = h(n) · exp (cid:0)f (n, θ)(cid:1),
(cid:89)

(cid:89)

(cid:0)nS(iS)!(cid:1)ν(S)

h(n) = N ! ·

S∈S

iS ∈X |S|
(cid:89)
(cid:89)

· I{n ∈ MZ

N }

nC(iC)!

C∈C

iC ∈X |C|

The term exp (cid:0)f (n, θ)(cid:1) is the probability of an ordered
data set X with sufﬁcient statistics n, as discussed previ-
ously. The term h(n) is a base measure that counts the
number of ordered data sets with sufﬁcient statistics equal
to n, and enforces constraints on n. The integer-valued
marginal polytope MZ
N is the set of all vectors n that are
sufﬁcient statistics of some data set X of size N .

Exact inference in CGMs is intractable (Sheldon et al.,
2013). Therefore,
it is typical to relax the integrality
log n! ≈
constraint and apply Stirling’s approximation:
n log n − n. Let MN be the feasible set with the inte-
grality constraint removed, which is now just the standard
marginal polytope scaled so that each marginal sums to N
instead of one.

Proposition 5 (Sun et al.; Nguyen et al., 2015; 2016). For
a decomposable CGM with junction tree T , the following

approximation of the CGM log-density for any n ∈ MN is
obtained by applying Stirling’s approximation:

log p(n, y; θ) ≈ θT n−N A(θ)+H(n)+log p(y|n). (5)
Here, H(n) = −N (cid:80)
x q(x) log q(x) is the entropy of the
unique distribution q(x) = p(x; θ) in the graphical model
family with marginals equal to n/N .

Proposition 5 is the basis for approximate MAP inference
problem in CGMs: ﬁnd n to maximize Eq. (5) and obtain
an approximate mode of p(n | y; θ). Even though our goal
is to compute the mean E[n | y; θ], it has been shown that
the approximate mode, which is also a real-valued vector,
is an excellent approximation to the mean for use within
the EM algorithm (Sheldon et al., 2013). Note that for
non-decomposable models, we will simply apply the same
approximation as in Proposition 5, even though an exact
expression for the counting measure h(n), and therefore
the correspondence of log h(n) to an entropy H(n), is not
known in this case. Then, after dropping the term N A(θ)
from Proposition 5, which is constant with respect to n, the
approximate MAP problem can be rewritten as:

n∗ ∈ argmax
n∈MN

θT n + H(n) + log p(y | n)

(6)

This equation reveals a close connection to variational prin-
ciples for graphical models (Wainwright & Jordan, 2008).
It is identical to the variational optimization problem for
marginal inference in standard graphical models, except the
objective has an additional term log p(y|n), which is non-
linear in n. Several message-passing based algorithms have
been developed to efﬁciently solve the approximate MAP
problem. For trees or junction trees, Problem (6) is convex
as long as log p(y|n) is concave in n (which is true in most
cases of interest, such as Laplace noise) so it can be solved
exactly (Sun et al., 2015; Vilnis et al., 2015). For loopy
models, both the entropy H(n) and the feasible set MN
must be approximated (Nguyen et al., 2016).

Differentially Private Learning of Graphical Models

Algorithm 1 Non-Linear Belief Propagation (NLBP)

possible.

Input: θ, y, damping parameter α > 0

while ¬ converged do

θ(cid:48) ← θ + ∇n log p(y | n)
n(cid:48) ← STANDARD-BP(cid:0)θ(cid:48)(cid:1) {Normalized to sum to N }
n ← (1 − α)n + αn(cid:48)

end while

Algorithm 2 EM for CGMs
Input: Noisy sufﬁcient statistics y

Initialize θ0 arbitrarily
while ¬ converged do
nt ← NLBP(θt, y)
θt+1 ← argmaxθ θT nt − N A(θ)

end while

Algorithm 1 shows pseudocode non-linear belief propaga-
tion (NLBP; Sun et al., 2015), which we select as our pri-
mary inference approach due to its simplicity. It is a thin
wrapper around standard BP, and can be applied to trees,
in which case it exactly solves Problem (6), or it can be
applied to loopy graphs by using loopy BP (LBP) as the
subroutine, in which case it is approximate.

Our ﬁnal EM learning procedure is shown in Algorithm 2.
It alternates between inference steps that solve the approx-
imate MAP problem to ﬁnd nt ≈ E[n | y; θt], and opti-
mization steps to re-estimate parameters given the inferred
sufﬁcient statistics nt. See also (Sheldon et al., 2013; Liu
et al., 2014; Sun et al., 2015).

4. Experiments

We conduct a number of experiments on synthetic and
real data to evaluate the quality of models learned by both
Naive MLE and CGM.

Methods. We compare three algorithms: Naive MLE,
CGM, and a version of private stochastic gradient descent
(PSGD) due to Abadi et al. (2016). PSGD belongs to a
class of general-purpose private learning algorithms that
can be adapted to our problem, including gradient descent
or stochastic gradient descent algorithms for empirical risk
minimization (Chaudhuri et al., 2011; Kifer et al., 2012;
Jain & Thakurta, 2013; Bassily et al., 2014; Abadi et al.,
2016) and the subsample-and-aggregate approach for pa-
rameter estimation (Smith, 2011). We chose PSGD be-
cause it is a state-of-the-art method and it signiﬁcantly out-
performed other approaches in preliminary experiments.
However, note that PSGD satisﬁes only ((cid:15), δ)-differential
privacy for δ > 0, which is a weaker privacy guarantee than
(cid:15)-differential privacy. We tune PSGD using a grid search
over all relevant parameters to ensure it performs as well as

4.1. Synthetic data

We evaluate two types of pairwise graphical models: third-
order chains with edges between two nodes i and j if
1 ≤ |i − j| ≤ 3, and (connected) Erd˝os-R´eyni (ER) ran-
dom graphs. We report results for graphs of 10 nodes,
where potentials on each edge are drawn from a Dirich-
let distribution with concentration parameter of one; results
are similar for smaller and larger models, models with dif-
ferent structures, and for different types of potentials. We
vary data size N and privacy parameter (cid:15). For each setting
of model type, N , and (cid:15), we conduct 25 trials. The trials
are nested, with ﬁve random populations and ﬁve replica-
tions per population, i.e.: ni ∼ p(n), yi,j ∼ p(y | ni) for
i ∈ {1, . . . , 5}, j ∈ {1, . . . , 5}. We measure the quality
of learned models using KL divergence from the true dis-
tribution, and include for comparison two reference mod-
els: a random estimator and a non-private MLE estimator.
The random estimator is obtained by randomly generating
marginals ¯µ and then learning potentials via MLE.

Results. Figure 2 shows the results for the two models
(top: third-order chain, bottom: ER) for different values of
N and (cid:15). CGM improves upon Naive MLE for all mod-
els, privacy levels, and population sizes. Recall that PSGD
promises only ((cid:15), δ)-differential privacy. While δ is often
assumed to be “cryptographically small”, e.g., O(2−N ), we
set δ to a relatively large value of δ = 1/N . Increasing δ
weakens the privacy guarantee but enables PGSD to run on
a wider range of (cid:15). However, even with this setting for δ,
some of the smaller values of (cid:15) are not attainable by PGSD
and are omitted from those plots.

Figure 3(a) shows a qualitative comparison of edge
marginals of a single graph learned by the different meth-
ods, compared with the true model marginals; it is evident
that CGM learns marginals that are much closer to both
the true marginals and those learned by the non-private es-
timator than Naive MLE is able to learn. Naive MLE is
the fastest method; CGM is approximately 4x/8x slower on
third-order chains and ER graphs, respectively, and PSGD
is approximately 27x/40x slower.

4.2. Wiﬁ data

We study human mobility data in the form of connections
to wiﬁ access points throughout a highly-trafﬁcked aca-
demic building over a twenty-one day period. We treat
each (user ID, day) combination as an “individual”, lead-
ing to 124,399 unique individuals; with this data prepara-
tion scheme, the unit of protection is one day’s worth of a
user’s data. We discretize time by recording the location
every 10 minutes, and assign null if the user is not con-
nected to the network. Our probability model p(x) is a

Differentially Private Learning of Graphical Models

(a) (cid:15) = 0.01

(b) (cid:15) = 0.1

(c) (cid:15) = 0.5

(d) (cid:15) = 1.0

(e) (cid:15) = 0.01

(f) (cid:15) = 0.1

(g) (cid:15) = 0.5

(h) (cid:15) = 1.0

Figure 2. Results on synthetic data generated from third-order chains, (a)–(d), and connected Erd˝os-R´eyni random graphs (e)–(h). Each
column represents a different privacy level. Lower (cid:15) signiﬁes stricter privacy guarantees. The x-axis measures population size. The
y-axis is KL divergence from the true distribution.

this technique is that we bias the model towards individuals
with fewer transitions, but we reduce the amount of noise
by limiting sensitivity caused by null–null transitions.

We reserve data from 25% of the individuals for testing.
To compare different approaches, we apply Naive MLE,
CGM, and PSGD to privately learn parameters of a graph-
ical model from the training set (75% of the data), with
varying privacy levels. We then calculate holdout log-
likelihood of the learned parameters on the test set. We
again include a non-private method for reference, but in
this case, all methods perform better than the random esti-
mator, so we do not show it.

shows

Figure 3(b)
for ﬁtting a time-
the results
homogeneous chain model (edges between adjacent time
steps, every potential ψ(xt, xt+1) is the same, and the
model includes a node potential φ(x1) so it can learn a
time-stationary model). As in the synthetic data exper-
iments, CGM improves upon naive MLE across all pa-
rameter regimes, and performance improves with popu-
lation size N and with weakening of privacy (larger (cid:15)).
Both methods outperform PSGD. Naive MLE is the fastest
method; CGM is approximately 15x slower, and PSGD is
approximately 46x slower.

Acknowledgments

This material is based upon work supported by the National
Science Foundation under Grant Nos. 1409125, 1409143,
1421325, and 1617533.

(a)

(b)

Figure 3. (a) Scatter plots for true vs. inferred values of all edge
marginals in an ER graph of 10 nodes with 20 states each. (b)
Results for ﬁtting a ﬁrst-order chain on wiﬁ data. The x-axis is
privacy level; lower (cid:15) signiﬁes stronger privacy guarantees. The
y-axis is holdout log-likelihood.

pairwise graphical model over hour-long segments. There-
fore, we break each individual’s data into 24 one-hour long
segments.

An individual now contributes 24 records to each contin-
gency table for the model p(x). Therefore, the sensitivity
is now 24 times the number of edges (cliques). However,
real data is typically sparse—i.e., an individual is typically
observed only a small number of times over the observation
period. Therefore, to reduce the sensitivity, the data is nor-
malized prior to calculating sufﬁcient statistics, in a fashion
similar to (He et al., 2015). Each user contributes a value
of 1/K to each contingency table, where K is the num-
ber of edges (xs, xt) for which the user’s values are not
both null. With this pre-processing in place, the sensitiv-
ity equals the number of edges in the model. A trade-off of

104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGM104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGM104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGMPSGD104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGMPSGD104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGM104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGM104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGMPSGD104105106Number of individuals10−710−510−310−1101KL from True Distn.RandomNon-PrivateNaive MLECGMPSGD0.0000.0050.0100.0150.020True marginals0.00000.00250.00500.00750.01000.01250.01500.01750.0200Inferred marginalsNaive MLECGMNon-PrivateDifferentially Private Learning of Graphical Models

References

Abadi, Mart´ın, Chu, Andy, Goodfellow, Ian, McMahan,
H. Brendan, Mironov, Ilya, Talwar, Kunal, and Zhang,
In Pro-
Li. Deep learning with differential privacy.
the 2016 ACM SIGSAC Conference on
ceedings of
Computer and Communications Security, pp. 308–318.
ACM, 2016.

Barak, Boaz, Chaudhuri, Kamalika, Dwork, Cynthia, Kale,
Satyen, McSherry, Frank, and Talwar, Kunal. Privacy,
accuracy, and consistency too: a holistic solution to con-
tingency table release. In Proceedings of the twenty-sixth
ACM SIGMOD-SIGACT-SIGART symposium on Princi-
ples of database systems, pp. 273–282. ACM, 2007.

Bassily, Raef, Smith, Adam, and Thakurta, Abhradeep. Pri-
vate empirical risk minimization: Efﬁcient algorithms
and tight error bounds. In Foundations of Computer Sci-
ence (FOCS), 2014 IEEE 55th Annual Symposium on,
pp. 464–473. IEEE, 2014.

Blum, Avrim, Dwork, Cynthia, McSherry, Frank, and Nis-
the SuLQ framework.
sim, Kobbi. Practical privacy:
In Proceedings of the Twenty-Fourth ACM SIGMOD-
SIGACT-SIGART Symposium on Principles of Database
Systems (PODS), pp. 128–138. ACM, 2005.

Chaudhuri, Kamalika and Monteleoni, Claire. Privacy-
In Advances in Neural

preserving logistic regression.
Information Processing Systems, pp. 289–296, 2009.

Chaudhuri, Kamalika, Monteleoni, Claire, and Sarwate,
Anand D. Differentially private empirical risk minimiza-
tion. Journal of Machine Learning Research, 12(Mar):
1069–1109, 2011.

Dimitrakakis, Christos, Nelson, Blaine, Mitrokotsa, Aika-
terini, and Rubinstein, Benjamin I.P. Robust and pri-
In International Conference
vate Bayesian inference.
on Algorithmic Learning Theory, pp. 291–305. Springer,
2014.

Duchi, John, Shalev-Shwartz, Shai, Singer, Yoram, and
Chandra, Tushar. Efﬁcient projections onto the l 1-ball
for learning in high dimensions. In Proceedings of the
25th international conference on Machine learning, pp.
272–279. ACM, 2008.

Dwork, Cynthia and Roth, Aaron. The Algorithmic Foun-
dations of Differential Privacy. Found. and Trends in
Theoretical Computer Science, 2014.

Dwork, Cynthia, McSherry, Frank, Nissim, Kobbi, and
Smith, Adam. Calibrating noise to sensitivity in private
In Theory of Cryptography Conference,
data analysis.
pp. 265–284. Springer, 2006.

Fienberg, Stephen E. and Rinaldo, Alessandro. Maximum
likelihood estimation in log-linear models. The Annals
of Statistics, pp. 996–1023, 2012.

Fisher, Ronald Aylmer. On the mathematical foundations
of theoretical statistics. Philosophical Transactions of
the Royal Society of London. Series A, Containing Pa-
pers of a Mathematical or Physical Character, 222:309–
368, 1922.

Foulds, James, Geumlek, Joseph, Welling, Max, and
Chaudhuri, Kamalika. On the theory and practice of
privacy-preserving Bayesian data analysis. In Proceed-
ings of the Thirty-Second Conference on Uncertainty in
Artiﬁcial Intelligence, UAI’16, pp. 192–201, 2016.

Haberman, Shelby J. Log-linear models for frequency data:
Sufﬁcient statistics and likelihood equations. The Annals
of Statistics, 1(4):617–632, 1973. ISSN 00905364. URL
http://www.jstor.org/stable/2958307.

Hardt, Moritz, Ligett, Katrina, and McSherry, Frank. A
simple and practical algorithm for differentially private
In Advances in Neural Information Pro-
data release.
cessing Systems, pp. 2339–2347, 2012.

He, Xi, Cormode, Graham, Machanavajjhala, Ashwin, Pro-
copiuc, Cecilia M., and Srivastava, Divesh. DPT: dif-
ferentially private trajectory synthesis using hierarchical
reference systems. Proceedings of the VLDB Endow-
ment, 8(11):1154–1165, 2015.

Jain, Prateek and Thakurta, Abhradeep. Differentially pri-
vate learning with kernels. ICML (3), 28:118–126, 2013.

Karwa, Vishesh, Slavkovi´c, Aleksandra B., and Krivitsky,
Pavel. Differentially private exponential random graphs.
In International Conference on Privacy in Statistical
Databases, pp. 143–155. Springer, 2014.

Karwa, Vishesh, Slavkovi´c, Aleksandra, et al.

Inference
using noisy degrees: Differentially private beta-model
and synthetic graphs. The Annals of Statistics, 44(1):
87–112, 2016.

Kasiviswanathan, Shiva Prasad, Lee, Homin K., Nissim,
Kobbi, Raskhodnikova, Sofya, and Smith, Adam. What
can we learn privately? SIAM Journal on Computing, 40
(3):793–826, 2011.

Kifer, Daniel, Smith, Adam, and Thakurta, Abhradeep.
Private convex empirical risk minimization and high-
dimensional regression. Journal of Machine Learning
Research, 1(41):3–1, 2012.

Koller, Daphne and Friedman, Nir. Probabilistic graphical
models: principles and techniques. MIT press, 2009.

Differentially Private Learning of Graphical Models

Kullback, Solomon and Leibler, Richard A. On informa-
tion and sufﬁciency. The annals of mathematical statis-
tics, 22(1):79–86, 1951.

Williams, Oliver and McSherry, Frank. Probabilistic in-
ference and differential privacy. In Advances in Neural
Information Processing Systems, pp. 2451–2459, 2010.

Wu, Xi, Kumar, Arun, Chaudhuri, Kamalika, Jha, Somesh,
and Naughton, Jeffrey F. Differentially private stochas-
tic gradient descent for in-RDBMS analytics. CoRR,
abs/1606.04722, 2016. URL http://arxiv.org/
abs/1606.04722.

Yang, Xiaolin, Fienberg, Stephen E., and Rinaldo,
Alessandro. Differential privacy for protecting multi-
dimensional contingency table data: Extensions and ap-
plications. Journal of Privacy and Conﬁdentiality, 4(1):
5, 2012.

Zhang, Jun, Cormode, Graham, Procopiuc, Cecilia M., Sri-
vastava, Divesh, and Xiao, Xiaokui. Privbayes: Private
data release via Bayesian networks. In Proceedings of
the 2014 ACM SIGMOD International Conference on
Management of Data, pp. 1423–1434, 2014.

Zhang, Zuhe, Rubinstein, Benjamin I.P., and Dimitrakakis,
Christos. On the differential privacy of Bayesian infer-
ence. In Thirtieth AAAI Conference on Artiﬁcial Intelli-
gence, 2016.

Liu, Li-Ping, Sheldon, Daniel R.,

and Dietterich,
Thomas G. Gaussian approximation of collective graph-
In Proceedings of the 31st International
ical models.
Conference on Machine Learning (ICML), 2014.

Nguyen, Duc Thien, Kumar, Akshat, Lau, Hoong Chuin,
and Sheldon, Daniel. Approximate inference using DC
In Pro-
programming for collective graphical models.
ceedings of the 19th International Conference on Artiﬁ-
cial Intelligence and Statistics, pp. 685–693, 2016.

Rubinstein, Benjamin I.P., Bartlett, Peter L., Huang,
Ling, and Taft, Nina. Learning in a large function
space: Privacy-preserving mechanisms for SVM learn-
ing. arXiv preprint arXiv:0911.5708, 2009.

Sheldon, Daniel R. and Dietterich, Thomas G. Collective
graphical models. Neural Information Processing Sys-
tems (NIPS), 2011.

Sheldon, Daniel R., Sun, Tao, Kumar, Akshat, and Diet-
terich, Thomas G. Approximate inference in collective
In Proceedings of the 30th Interna-
graphical models.
tional Conference on Machine Learning (ICML), 2013.

Smith, Adam. Efﬁcient, differentially private point estima-

tors. arXiv preprint arXiv:0809.4794, 2008.

Smith, Adam.

Privacy-preserving statistical estimation
In Proceedings of the
with optimal convergence rates.
Forty-Third Annual ACM Symposium on Theory of Com-
puting (STOC), pp. 813–822. ACM, 2011.

Sun, Tao, Sheldon, Daniel R., and Kumar, Akshat. Mes-
In Pro-
sage passing for collective graphical models.
ceedings of the 32nd International Conference on Ma-
chine Learning (ICML), 2015.

Vilnis, Luke, Belanger, David, Sheldon, Daniel, and Mc-
Callum, Andrew. Bethe projections for non-local in-
ference. In Proceedings of the Thirty-First Conference
on Uncertainty in Artiﬁcial Intelligence, pp. 892–901.
AUAI Press, 2015.

Wainwright, Martin J. and Jordan, Michael I. Graphical
models, exponential families, and variational inference.
Foundations and Trends in Machine Learning, 1(1-2):1–
305, 2008.

Wang, Yu-Xiang, Fienberg, Stephen, and Smola, Alex. Pri-
vacy for free: Posterior sampling and stochastic gradient
Monte Carlo. In Proceedings of the 32nd International
Conference on Machine Learning (ICML-15), pp. 2493–
2502, 2015.

