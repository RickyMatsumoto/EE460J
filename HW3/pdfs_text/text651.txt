Supplementary Material for “Tensor Belief Propagation”

Andrew Wrigley 1 Wee Sun Lee 2 Nan Ye 3

Appendix (Supplementary Material)

where we have used µ1, µ2 ≤ M and (cid:15)

3M ≤ M .

Proof of Consistency

To prove consistency of the algorithm, we introduce a few
lemmas.
Lemma 1. Let X1,n, . . . , Xm,n be random variables such
p
→ µi as n → ∞. Let Xi,n ∈ [0, M ] and µi ∈
that Xi,n
[0, M ] for i = 1, . . . , m. Then (cid:80)
i µi and
(cid:81)

p
→ (cid:80)

i Xi,n

i Xi,n

p
→ (cid:81)

i µi.

p
Proof. Since Xi,n
→ µi, for any (cid:15) > 0, and any δ > 0,
there exists an Ni such that for n > Ni, P (|Xi,n − µi| >
m ) ≤ δ
(cid:15)
m . Let N = max{N1, . . . , Nm}, and assume n >
N . Then for every i, P (|Xi,n − µi| > (cid:15)
m . By the
union bound, with probability at least 1 − δ, for every i,
|Xi,n − µi| ≤ (cid:15), which implies | (cid:80)
i µi| ≤ (cid:15).
Hence when n > N , p(| (cid:80)
i µi| > (cid:15)) ≤ δ. It
p
follows that (cid:80)
→ (cid:80)
p
To show that (cid:81)
→ (cid:81)
i µi, it sufﬁces to show this for
m = 2. The proof then follows by mathematical induction.

m ) ≤ δ
i Xi,n − (cid:80)

i Xi,n − (cid:80)
i µi.

i Xi,n

i Xi,n

2 and P (|X2,n − µ2| > (cid:15)

For any (cid:15) > 0 and δ > 0, there exists N1 and N2 such
that for any n > max{N1, N2}, we have P (|X1,n − µ1| >
3M ) < δ
(cid:15)
2 . By the union
bound, with probability at least 1 − δ, |X1,n − µ1| ≤ (cid:15)
3M
and |X2,n − µ1| ≤ (cid:15)
3M . Let s1, s2 ∈ {−1, 1} and assume
(cid:15)
3M ≤ M (the result in the case (cid:15)
3M > M holds trivially).
Then, with probability at least 1 − δ,

3M ) < δ

µ1 +

≤ max
s1,s2

|X1,nX2,n − µ1µ2|
(cid:12)
(cid:16)
s1(cid:15)
(cid:12)
(cid:12)
3M
(cid:12)
(cid:12)
(cid:12)
(cid:12)

µ1s2(cid:15)
3M

= max
s1,s2

+

(cid:17) (cid:16)

µ2 +

µ2s1(cid:15)
3M

+

(cid:17)

s2(cid:15)
3M
s1s2(cid:15)2
9M 2

(cid:12)
(cid:12)
(cid:12)
(cid:12)

− µ1µ2

(cid:12)
(cid:12)
(cid:12)

≤ (cid:15),

1Australian National University, Canberra, Australia.
2National University of Singapore, Singapore.
3Queensland
University of Technology, Brisbane, Australia. Correspondence
to: Andrew Wrigley <andrew.wrigley@anu.edu.au>, Wee Sun
Lee <leews@comp.nus.edu.sg>, Nan Ye <n.ye@qut.edu.au>.

Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

p
→ 0.

In the following, given two sequences of random variables
p
→ Yn to denote Xn −
{Xn} and {Yn}, we shall use Xn
Yn
Lemma 2. For any random vectors Xn, Yn, Y , if Xn
p
Yn and Yn
→ Y as n → ∞.

p
→ Y as n → ∞, then Xn

p
→

Proof. For any (cid:15) > 0 and δ > 0, there exists an N such
2 ) < δ
that for any n > N , we have P (|Xn − Yn| > (cid:15)
2
and P (|Yn − Y | > (cid:15)
2 ) < δ
2 . Using the union bound, with
probability at least 1 − δ, we have |Xn − Yn| ≤ (cid:15)
2 and
|Yn − Y | ≤ (cid:15)
2 . Hence with probability at least 1 − δ, |Xn −
Y | ≤ (cid:15). Thus Xn

p
→ Y as n → ∞.

(cid:80)n

i=1 Yn,i where Yn,i are i.i.d.

Lemma 3. Let Xn is a random variable, and Yn =
1
random variables in
n
[0, M ] for some constant M . Let the expectation of Yn
be Xn. Then Yn

p
→ Xn as n → ∞.

Proof. When Xn = x, we have P (|Yn − x| ≤ (cid:15) | Xn =
x) ≤ 1 − 2e−2n(cid:15)2/M 2
according to Hoeffding’s inequality.
Since this holds for any x, we have P (|Yn − Xn| ≤ (cid:15)) ≤
1 − 2e−2n(cid:15)2/M 2

. It follows that Yn

p
→ Xn.

Proof. (Proof of consistency) It sufﬁces to show that at the
beginning of each iteration, all the estimated messages are
consistent.

Initially, none of the messages have been estimated, and it
is vacuously true that all messages that have been estimated
so far are consistent.

For the inductive case, it sufﬁces to show that the message
estimated at each iteration is consistent. Speciﬁcally, let
˜m(K)
t→s(xs) be the estimate of the true message mt→s(xs)
p
using K samples, we show that ˜m(K)
→ mt→s(xs)
as K → ∞.
By the inductive assumption, ˜m(K)
u→t(xt) is consistent for
each u ∈ N (t) \ {s}, where N (t) is the set of neighbours
for t. To simplify notation, we denote the true messages in
{mu→t(xt) : u ∈ N (t) \ {s}} by m1(xt), . . . , ml(xt) and
denote their estimates by ˜m(K)

(xt), . . . , ˜m(K)

t→s(xs)

(xt).

1

l

Tensor Belief Propagation

for θ > 1. Speciﬁcally, to solve (1) we solve

2xy = θ
1
θ

x2 + y2 =

which yields

y =

θ +

∓

− θ

x =

θ +

±

− θ

,

(cid:32)(cid:114)

(cid:32)(cid:114)

(cid:32)

(cid:114)

(cid:32)

(cid:114)

1
2

1
2

1
2

1
2

1
θ

1
θ

(cid:114) 1
θ
(cid:114) 1
θ

1
θ

1
θ

(cid:114) 1
θ
(cid:114) 1
θ

(cid:33)

(cid:33)

(cid:33)

(cid:33)

y =

−

θ +

∓

− θ

x =

−

θ +

±

− θ

,

or

(2) is solved analogously.
solution and weight each rank-1 term equally.

In each case, we use the ﬁrst

Parameters for BP, MF, TRW, Gibbs

The following parameters were used for the existing ap-
proximate inference algorithms within the libDAI package:

• Loopy BP: Update schedule sequential using a ran-
dom sequence; maximum 104 iterations; tolerance for
convergence 10−12

• Mean-ﬁeld: Maximum 104 iterations; tolerance for

convergence 10−12

Let ˜Φ(K)
(xt) be the estimate of the initial clique potential
t
at the node. Each multiplication of factors to form the ini-
tial clique potential is done by sampling. Lemma 3 shows
that each multiplication converges to its expected value.
The expected value is in turn the product of two numbers,
one of which may be a previously computed random vari-
able. Lemma 1 shows that the product converges to the
true value, and Lemma 2 chains the two process together to
show that the estimate of the estimate for the initial clique
potential converges.

(xt) be the estimate of ˜Φ(K)

Let ˜v(K)
1
tained in the algorithm, and ˜v(K)
j−1(xt) ˜m(K)
˜v(K)
t→s(xs) = (cid:80)
˜m(K)

(xt) ob-
1
(xt) be the estimate of
(xt) for 2 ≤ j ≤ l. Then we have

(xt) ˜m(K)

(xt).

˜v(K)
l

j

j

t

xt\xs

1

1

The random variable ˜v(K)
(xt) is the average of K i.i.d.
random variables with expected value ˜Φt(xt) ˜m(K)
(xt).
By the construction of ˜v1 and the assumption that each
rank-1 tensor value is in [0, M ], we have that each of the
K random variables are in the range of [0, M 2].
It fol-
lows from Lemma 3 that ˜v(K)
(xt)
p
as K → ∞. Since we also have ˜m(K)
→ m1(xt)
and ˜Φ(K)
(xt), it follows from Lemma 1 and
p
Lemma 2 that ˜v(K)
→ Φt(xt)m1(xt).

p
→ Φ(K)
t
(xt)

p
→ ˜Φt(xt) ˜m(K)

(xt)

(xt)

(xt)

1

1

1

t

1

p
Using induction, we can similarly show that ˜v(K)
→
Φt(xt)m1(xt) . . . ml(xt). Summing over xt \ xs on both
sides and applying Lemma 1 again, we have ˜m(K)
t→s(xs) →
mt→s(xs). Since this holds for any xs, the convergence
holds for all xs.

(xt)

l

Decomposition for Ising models

For tables of this particular form, we note there is a nat-
ural rank-2 decomposition that one can compute quickly
by assuming terms in the decomposition are symmetric, by
solving

(cid:19)

1
θ
θ

(cid:19)

(cid:18)x
y

(cid:19)

(cid:18)y
x

⊗

+

(cid:19)

(cid:18)y
x

(cid:19)

(cid:18)x
y

⊗

=

for θ ≤ 1, and

(cid:18)θ
1
θ

(cid:18)θ
1
θ

(cid:19)

1
θ
θ

(cid:19)

(cid:18)x
y

(cid:19)

(cid:18)x
y

⊗

+

(cid:19)

(cid:18)y
x

(cid:19)

(cid:18)y
x

⊗

=

(1)

(2)

In the case of Ising models, and any pairwise MRFs with
Ising potentials of the form φij(xi, xj) = exp(wijxixj),
the 2 × 2 potential tables are in general rank-2 of the form

• Tree-reweighted BP: Sequential updates using a ran-
dom sequence; tree sample size of 104 used to set
weights; tolerance for convergence 10−12

(cid:18)θ
1
θ

(cid:19)

1
θ
θ

,

θ = exp(wij).

• Gibbs: Burn-in 100 passes; restart chain with random
initialisation every 1000 passes; record one sample per
pass (pass = cycle once over all variables); running
time limited as indicated in text.

Supplementary Results

Additional results on the Ising model with different grid sizes and different interaction strengths are shown here.

Tensor Belief Propagation

Ising models: Effect of model size N on marginal error. 100: sample size K = 100, 100000: sample size K = 100000. Gibbs running
time matches the running time of TBP with K = 100000.

Ising models: Effect of interaction strength on performance of approximate inference algorithms. Gibbs sampling matches TBP (100000)
runtime.

46810121416Ising grid width0.00.10.20.30.40.5Marginal errorAttractive interactionsTBP (100)TBP (100000)MFBPTRWGibbs46810121416Ising grid width0.00.10.20.30.40.5Marginal errorMixed interactionsTBP (100)TBP (100000)MFBPTRWGibbs0.51.01.52.02.53.03.54.0Interaction strength0.00.10.20.30.40.5Marginal errorAttractive interactionsTBP (100)TBP (100000)MFBPGibbsTRW0.51.01.52.02.53.03.54.0Interaction strength0.00.10.20.30.40.5Marginal errorMixed interactionsTBP (100)TBP (100000)MFBPGibbsTRWDistribution of estimated marginals

Tensor Belief Propagation

To give an indication of the variance of the estimates, we show histograms of the marginal estimates on the Ising models.

Estimated values of P (Xi = 1) for 500 runs of tensor propagation for small versus large multiplication sample size K. Each histogram
shows marginal estimates for a single node in the 10 × 10 Ising model grouped into 20 bins. Nodes shown are from the upper-left 3 × 3
corner of the grid. Solid red vertical lines indicate the true marginal and dashed green vertical lines show the mean of the 500 marginal
estimates. The two mixed plots use the same Ising model instance, as do the two attractive plots.

Mixed, K = 100Mixed, K = 10000Attractive, K = 100Attractive, K = 10000