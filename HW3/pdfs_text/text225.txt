Convex Phase Retrieval without Lifting via PhaseMax

Tom Goldstein * 1 Christoph Studer * 2

Abstract

2. Phase Retrieval Problems

Semideﬁnite relaxation methods transform a va-
riety of non-convex optimization problems into
convex problems, but square the number of vari-
ables. We study a new type of convex relaxation
for phase retrieval problems, called PhaseMax,
that convexiﬁes the underlying problem without
lifting. The resulting problem formulation can
be solved using standard convex optimization
routines, while still working in the original, low-
dimensional variable space. We prove, using a ran-
dom spherical distribution measurement model,
that PhaseMax succeeds with high probability for
a sufﬁciently large number of measurements. We
compare our approach to other phase retrieval
methods and demonstrate that our theory accu-
rately predicts the success of PhaseMax.

1. Introduction

Semideﬁnite relaxation is the technique of replacing a broad
range of non-convex optimization problems involving a vec-
tor of (possibly discrete) variables with convex problems
involving matrices. The relaxed convex problem is then
solved to global optimality, and the solution is used to ex-
tract a global minimizer of the original non-convex problem.
Unfortunately, convexity comes at a steep cost: semideﬁnite
relaxation squares the dimensionality of the problem, re-
sulting in formulations that are convex but computationally
intractable in many situations. In fact, the increase in di-
mensionality, which is called lifting, often prevents the use
of this technique in machine learning and computer vision
applications involving thousands to millions of variables.

This article studies convex relaxation for phase retrieval,
a canonical non-convex problem that can be solved via
semideﬁnite relaxation. We present a relaxation approach
that convexiﬁes the problem without lifting, i.e., it solves
the problem in its original, low-dimensional space.

*Equal contribution 1University of Maryland 2Cornell Univer-
sity. Correspondence to: Tom Goldstein <tomg at cs.umd.edu>.

Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by
the author(s).

Phase retrieval deals with the recovery of an n-dimensional
signal x0
n
magnitude measurements of the form (Cand`es et al., 2013)

either R or C, from m

n, with

∈ H

H

≥

bi =

ai, x0

|(cid:104)

,
(cid:105)|

i = 1, 2, . . . , m,

(1)

n, and i = 1, 2, . . . , m are the (known) mea-
where ai ∈ H
surement vectors. Because of the nonlinearity caused by
measuring the magnitude of the linear terms in (1), the phase
retrieval problem is non-convex.

A variety of algorithms exist for ﬁnding x0 in (1). Classical
methods, such as the Gerchberg-Saxton and Feinup algo-
rithms, search for a solution via alternating least-squares
steps that are efﬁcient when the measurement ensemble
ai}
forms a tight frame (e.g., a collection of Fourier matrices).

{

×

More recently, there has been signiﬁcant interest in con-
vex methods for phase retrieval that provably ﬁnd global
solutions without the danger of getting trapped in local min-
ima. These methods, including PhaseLift (Cand`es et al.,
2013) and its dual formulation PhaseCut (Waldspurger et al.,
2015), rely on semideﬁnite relaxation and replace the un-
known n-dimensional vector x with a (much larger) n
n
matrix of unknowns that is recovered using semi-deﬁnite
programming. While such methods come with strong theo-
retical guarantees and do not get trapped in local minima,
they require lifting (semideﬁnite relaxation squares the num-
ber of unknowns), which makes this approach intractable
for real-world image processing applications involving thou-
sands or millions of variables. As a result, there has been
a ﬂurry of interest in global convergence properties of non-
convex solvers that operate in the original feature space,
such as the methods in (Netrapalli et al., 2013; Schniter &
Rangan, 2015; Cand`es et al., 2015; Chen & Cand`es, 2015;
Wang et al., 2016). While these methods come with theoret-
ical guarantees, non-convexity makes it difﬁcult to combine
them with commonly used regularizers, and typically pre-
cludes the use of sophisticated optimization methods that
can handle constraints, non-differentiable terms, etc.

We note that the PhaseMax formulation has also been pro-
posed by (Bahmani & Romberg, 2016) and was recently
analyzed by (Hand & Voroninski, 2016). We discuss and
compare these results in Section 8.2.

Submission and Formatting Instructions for ICML 2017

3. A Word on Notation

(cid:104)

(cid:105)

x, y

n as

∈ H

Scalars are lower-case letters, and vector quantities are
boldface, lower-case letters. Matrices are boldface upper-
case letters, and sets are written using upper-case script
font. We denote the inner product between the vectors
= xT y, and xT is the transpose
x, y
in the real case or the Hermitian transpose in the com-
plex case. We denote the real part of the inner product
(xT y) and the imaginary part as
as
x, y
(cid:104)
so that
x, y
(cid:104)
(cid:104)
non-negative reals are denoted R+
0 .
We denote the unit sphere embedded in Rn as
use
of these cases at once, we will often write

, and
for the sphere in complex space. To address both

x, y
(cid:105)(cid:61)
(cid:104)
1. The
−

=
(cid:105)(cid:60)
x, y
(cid:104)

with j2 =

x, y

+ j

(cid:60)
=

(cid:105)(cid:60)

(cid:105)(cid:61)

n
C

n
R

S

S

−

−

(cid:105)

1

1

n

1

−

S
H
R, C

}

where

H ∈ {

n

=

x
{

,
(cid:107)2 = 1
}
is either the real or complex numbers.

∈ H

| (cid:107)

x

4. Proposed Relaxation

We propose PhaseMax, a formulation of the phase retrieval
problem that avoids lifting. Put simply, PhaseMax relaxes
= bi into con-
the non-convex equality constraints
|(cid:104)
vex inequality constraints of the form
bi. The
resulting convex problem can then be solved using linear
programming in the real case or using second-order cone
programming in the complex case.

(cid:105)|
ai, x

ai, x

(cid:105)| ≤

|(cid:104)

At ﬁrst glance, the proposed relaxation seems too simplistic
to recover x0. Indeed, the relaxed system of inequalities
has a trivial solution:
the all-zeros vector. To obtain a
meaningful solution, we need to force the solution vector to
lie on the boundary of the constraint set, where the inequality
constraints hold with equality. To force the solution to lie on
n
the boundary, we rely on some intelligent “guess” ˆx
of the solution to (1); we will discuss methods for producing
such guesses in Section 8.1. We then ﬁnd the feasible point
n as possible. This
that lies as far in the direction of ˆx
results in the convex optimization problem

∈ H

∈ H

(PhaseMax)

(cid:40)

maximize
∈H
subject to

x

n

x, ˆx
(cid:104)

(cid:105)(cid:60)
ai, x

bi, i = 1, . . . , m.

(cid:105)| ≤

|(cid:104)
The key idea behind PhaseMax is that the objective forces
the solution vector to lie along the boundary of the constraint
set, where the constraints are active. Evidently, if all of the
constraints are active at this solution, then we have recovered
a solution to the original non-convex problem (1).

Quite surprisingly, the PhaseMax relaxation provably recov-
ers the true solution to (1) in many situations. In particular,
we have the following main result:
Theorem 1. Consider the case of recovering a signal
n from m measurements of the form (1) with measure-
x

∈ H

ment vectors ai, i = 1, 2, . . . , m, sampled independently
and uniformly from the unit sphere. Let

angle(x0, ˆx) = arccos

(cid:19)

(cid:18)

x0, ˆx
(cid:104)
x0
(cid:107)

(cid:105)(cid:60)
ˆx
(cid:107)2
(cid:107)2(cid:107)

be the angle between the true vector x0 and the “guess” ˆx,
and deﬁne the constant

α = 1

angle(x0, ˆx)

2
π

−

that measures the accuracy of our guess. If
whenever αm > 4n
recovers the true signal x0 is at least

= C, then
1, the probability that PhaseMax

H

−

1

exp

−

(cid:16)
−

(αm

4n)2

−
4m

(cid:17)

.

(2)

Similar results for the real case are derived below.

5. Formulation using Geometric Probability

Conditions for which PhaseMax enables exact recovery
can be formulated as a classical problem from geometric
probability involving random hemispheres, or “caps.” We
begin with a few simple deﬁnitions. Recall that we use
n. Given a

to denote the unit sphere embedded in

n

1

, the hemisphere cap centered at a is

H

−
S
vector a

H

n

1

−

∈ S

H

(a) =

CH

δ

{

1
n
−
H | (cid:104)

a, δ

∈ S

(cid:105)(cid:60) ≥

0

.
}

(3)

This cap contains all vectors that form an acute angle with a.

1

1

n

n

(cid:105)

(cid:104)

−

−

H

H

{

(cid:105)|

(cid:105)|

(cid:105) ∈

∈ S

with

∈ S
R+

ai, x

∈
{

˜ai}
{

ωai, x0

is said to be aligned with x

We also need the concept of aligned vectors. A complex
if
vector a
0 . In words, two vectors are aligned if their
x, a
(cid:104)
inner product is real valued and non-negative. Given a
vector x and a measurement vector a, we have
=
|(cid:104)
C. For this reason,
for any unit-magnitude ω
|(cid:104)
(cid:1) ai}
sign(cid:0)
ai, x0
we will often consider the set
˜ai}
=
{
of measurement vectors aligned with x0 without loss of
generality. Note that replacing
in PhaseMax
ai}
does not change the feasible set, and thus does not impact
the recovered solution. Finally, observe that a solution x(cid:63) to
(PM) must be aligned with ˆx. This is because
=
) . It follows that x(cid:63) cannot
(cid:105)
) = 1.
(cid:105)
We are now ready to formulate the following exact recovery
condition for PhaseMax.
Theorem 2. Consider the recovery of a vector x0 using
PhaseMax with guess ˆx. Assume, without loss of generality,
that ˆx and the measurement ensemble
are aligned
ai}
{
with x0. Let
be the set of unit
vectors aligned with ˆx. Then, x0 is the unique solution of
PhaseMax if

|(cid:104)
be optimal unless sign(
(cid:104)

x(cid:63), ˆx
when ω = sign(
(cid:104)
x(cid:63), ˆx

ωx(cid:63), ˆx
(cid:105)
(cid:104)

R+
0 }

x(cid:63), ˆx

δ, ˆx

(cid:105) ∈

=

D

(cid:105)|

|(cid:104)

δ

{

D ⊂

CH

(ai).

m
(cid:91)

i=1

(4)

Submission and Formatting Instructions for ICML 2017

Proof. Suppose the conditions of this theorem hold, and
let x(cid:63) be a solution to (PM). Since x0 is in the feasible
set, x(cid:63) must produce an objective value at least as large as
x0, and so
. We know that x(cid:63) is aligned
(cid:104)
(cid:105)
with ˆx. Since x0 is assumed to be aligned with ˆx, the vector
x0 is also aligned with ˆx, and satisﬁes
∆ = x(cid:63)

x(cid:63), ˆx

x0, ˆx

(cid:105) ≥ (cid:104)

−

(cid:104)
Since x(cid:63) is a feasible solution for (PM), we have

(cid:105) − (cid:104)

(cid:105) ≥

(cid:105)

=

x(cid:63), ˆx

x0, ˆx

0.

∆, ˆx
(cid:104)

|(cid:104)

ai, x0 + ∆
(cid:105)|
ai, x0
2[
(cid:104)

Now, recall that
Hence, we get

|(cid:104)

2+

2 =

ai, x0
|(cid:104)
ai, ∆
]
(cid:105)
(cid:105)
(cid:104)
(cid:60)
2 = b2
ai, x0

(cid:105)|
+

∗

(cid:105)|

ai, ∆

2
(cid:105)|

b2
i ,

i.

(5)

|(cid:104)
≤
i , and ai is aligned with x0.

∀

ai, ∆
(cid:104)

(cid:105)(cid:60) ≤ −

1
2 |(cid:104)

ai, ∆

2
(cid:105)|

≤

0,

i.

∀

(6)

If
∆
(cid:107)
tor δ = ∆/
(cid:107)2 satisﬁes δ
∆
(cid:107)
the covering condition (4). It follows that
x(cid:63) = x0.

(cid:107)2 > 0, then we see from (6) that the unit-length vec-
i, which contradicts
(cid:54)∈ C
(cid:107)2 = 0 and

∆
(cid:107)

(ai),

∀

6. Sphere Covering Results

D

Theorem 2 states that exact recovery of x0 occurs when
is aligned with x0, and the
the measurement ensemble
ai}
{
set
. We now study the
is covered by the caps
(ai)
}
{CH
probability that this condition holds. To do so, we need a
few elementary sphere covering results. Our proof builds
on the following simple result.
Rn using
Lemma 1. Suppose we slice the sphere
k planes through the origin. Then we divide the sphere into
as most

n
1
−
R ⊂

S

regions.

1

n
R

S
−

Proof. The proof is by induction. As a base case, we have
1. Now suppose
r(n, 1) = 2 and r(2, k) = 2k for k
≥
we have a sphere
in n dimensions sliced by k
1
−
1) “original” regions. Consider the
planes into r(n, k
effect of adding a kth plane, pk. The number of new regions
created is equal to the number of original regions that are
intersected by pk. To count the number of new regions, we
1 original normal vectors into pk, and count
project the k
the minimal number of regions formed inside pk by the
resulting projected planes, which is at most r(n
1).
Adding this to the number of original regions yields

1, k

−

−

−

−

r(n, k) = r(n, k

1) + r(n

1, k

1).

−

−

−

We leave it to the reader to verify that (7) satisﬁes this
recurrence relation.

Lemma 1 appears to have been ﬁrst proved by (Schl¨aﬂi,
1953), and simple induction arguments can be found in
(Wendel, 1962; Gilbert, 1965; F¨uredi, 1986).

Before we attack the problem of when (4) holds, we begin
with a simpler question: “how often is a sphere covered
by caps with centers chosen at random from the sphere?”
This question has been studied in detail by Gilbert (Gilbert,
1965) in the case n = 3. For our purposes, we need to study
the covering probability in the more general case when caps
are only chosen from a subset of the sphere, and the sphere
can have arbitrarily high dimension. We show below that
calculating this probability is easy when the caps are chosen
from a symmetric subset of the sphere. We say that the set
.
∈ A
−
is symmetric if the
.
⊂ A

A
A probability measure deﬁned over
measure of a is the same as

is symmetric if, for all x

, we also have

a for every a

∈ A

Lemma 2. Consider some non-empty symmetric set
ai}
{

A ⊂
mA
i=1 at
using a symmetric measure. Then, the caps

. Choose some set of m

measurements

n
R

A

−

x

A

−

1

S
random from
{CR(ai)
}

A

cover the sphere

1

−

n
R

S

with probability

pcover(m

, n)

A

1

≥

−

1
2mA

1

−

1
n
(cid:88)
−

(cid:18)m

(cid:19)
1

.

A −
k

k=0

This is the probability of getting n or more heads when
ﬂipping m

1 fair coins.

A −

{

Proof. Let
from
where
or
are i.i.d. with the same distribution as

be a collection of m i.i.d. vectors sampled
a(cid:48)i}
using a symmetric measure. Deﬁne ai = cia(cid:48)i,
are i.i.d. Bernoulli variables that take value +1
ci}
ai}

A
{
1 with probability 1

2 . Clearly, the random vectors
{

.
a(cid:48)i}

−

{

(cid:92)

i

CR(
−

ai) =

CR(
−

cia(cid:48)i),

(cid:92)

i

(8)

{CR(ai)
}

which contains all points not covered by the caps
.
{CR(ai)
}
The caps
cover the sphere whenever the intersec-
tion (8) is empty. There are 2mA such intersections that
can be formed, one for each choice of the sequence
.
ci}
random planes
Now, from Lemma 1, we know that the m
(cid:8)
)
A
non-empty regions. Each of these regions corresponds to the
intersection (8) for one possible choice of
. Therefore,
ci}
of the 2mA possible intersections, at most r(n, m
) of them
are non-empty. Since each intersection is equally likely, the
probability of covering the sphere is at least

{
(cid:9) divide the sphere into at most r(n, m

= 0
}

ai, x

x
{

| (cid:104)

{

A

A

(cid:105)

pcover(m

, n)

A

1

≥

−

r(n, m
2mA

)

.

A

r(n, k) = 2

1
n
(cid:88)
−

(cid:18)k

(cid:19)

1

−
i

i=0

Consider the set

(7)

Submission and Formatting Instructions for ICML 2017

Remark:
It can be shown that the bound in Lemma 1
is tight/exact when the slicing planes are chosen from a
continuous probability distribution. Similarly, the bound
in Lemma 2 is exact when the set
is sampled from a
continuous distribution over

.
A
We are now ready to present our main result. Exact recovery
theorems for PhaseMax will follow immediately from the
following geometric theorem. The result considers the case
where the measurement vectors are drawn from only one
hemisphere.

ai}
{

−

n
R

1
, and the
Lemma 3. Consider two vectors x, y
⊂ S
2
caps
π angle(x, y) be a
CR(x) and
measure of the similarity between the vectors x and y. Draw
m
some collection
i=1 of m vectors uniformly
from

CR(y). Let α = 1
ai ∈ CR(x)
}
{
CR(x) so that α(m
−
CR(y)

1) > 2n. Then,

CR(ai)

(cid:91)

⊂

−

i

holds with probability at least

pcover(m, n; x, y)

1

exp

≥

−

−

(cid:18)

(αm

α
−
2m

2n)2
−
2
−

(cid:19)

.

Proof. To simplify notation, we assume y = [1, 0, . . . , 0]T .
Because of rotational symmetries this does not change the
generality of our proof. Consider the reﬂection of x over y
xn]T . Suppose we have some
given by ˜x = [x1,
collection
independently and uniformly distributed on
the entire sphere. Consider the collection of vectors

x2, . . . ,

ai}
{

−

−




(cid:104)

(cid:104)

(cid:104)

(cid:105)

0

if

if

if

y,



(cid:105) ≥

< 0,

< 0,

a(cid:48)i =

ai, y
2
(cid:104)

ai, ˜x
(cid:105)
ai, ˜x

ai, x
ai, x
(cid:105)
ai, x
(cid:105)

(9)
< 0 (10)
0. (11)

(cid:104)
(cid:104)
a(cid:48)i maps the half sphere

ai,
ai −
ai,
−
The mapping ai →
< 0
}
onto the half sphere
using a combination
a, x
of reﬂections and translations (see Figure 1). This makes
a(cid:48)i onto and (piecewise) isometric, and
the mapping ai →
will be uniformly distributed over the half sphere
so
a(cid:48)i}
{
a, x0
is independently and uni-
a
| (cid:104)

{
formly distributed over the entire sphere.

(cid:105) ≥
a, x

whenever

> 0
}

> 0
}

ai}
{

a
{

a
{

| (cid:104)

| (cid:104)

(cid:105)

(cid:105)

(cid:105)

Consider the “hourglass” shaped, symmetric set

We claim that

=

a

a, x

{

| (cid:104)

A

(cid:105) ≥

(cid:104)

0,

a, ˜x

0

(cid:105) ≥
a

}
a, x

0,

| (cid:104)

(cid:105) ≤

a, ˜x
∪ {
(cid:104)
i CR(a(cid:48)i) whenever
CR(ai).

(cid:91)

ai

∈A

CR(y)

(cid:83)

⊂
n
1
−
R ⊂

S

.
0
}

(cid:105) ≤

(12)

In words, if the caps deﬁned by the subset of
cover the entire sphere, then the caps

in

ai}
A
{
(which have

{CR(a(cid:48)i)
}

Figure 1. An illustration showing the construction of x, y, and ˜x
in the proof of Lemma 3.

(cid:104)

0.

=

=

. If

(cid:105)
δ, y

δ, a(cid:48)i(cid:105)
(cid:104)

centers in
nearby cap
holds. Choose some δ
some cap
and δ is covered by

CR(x)) not only cover
CR(x), but also cover the
CR(y). To justify this claim, suppose that (12)
∈ CR(y). This point is covered by
CR(ai) with ai ∈ A
0, then ai = a(cid:48)i
ai, x
(cid:105) ≥
(cid:104)
< 0, then
CR(a(cid:48)i). If
ai, x
(cid:104)
(cid:105)
δ, ai −
2
y
ai, y
(cid:105)
(cid:104)
δ, ai(cid:105) −
ai, y
2
(cid:104)

ai, y
(cid:104)
(cid:105)
δ, a(cid:48)i(cid:105) ≥
(cid:104)

δ, ai(cid:105) ≥
(cid:104)
(cid:105)(cid:104)
(cid:105) ≥ (cid:104)
δ, y
Note we have used the fact that
is real-valued and non-
(cid:104)
(cid:105)
negative because δ
∈ CR(y). We have also used
=
[ai]1 = 1
) < 0, which follows from the
ai, ˜x
+
ai, x
2 (
(cid:104)
(cid:105)
(cid:104)
(cid:105)
deﬁnition of ˜x and the deﬁnition of
. Since
0,
we have δ
∈ CR(a(cid:48)i), which proves our claim.
We can now see that the probability that
CR(y)
i CR(a(cid:48)i)
is at least as high as the probability that (12) holds. Let
) denote the probability of covering
pcover(m, n; x, y
.
A
≥
, n). As noted in Lemma 2, this is the chance of
1 fair coins,
. This

C
From Lemma 2, we know that pcover(m, n; x, y
pcover(m
turning up n or more heads when ﬂipping m
which is one coin for every measurement ai in
probability pcover(m, n; x, y) is

m
(y) conditioned on the number m

of points lying in
)

A −

m

(cid:83)

A

A

⊂

A

A

A

A

|

|

pcover(m, n; x, y) = EmA [pcover(m, n; x, y
, n)].

EmA [pcover(m

m

)]

A

|

≥

A

A

is given by α = 2π

Let’s evaluate this expectation. The region
is deﬁned by
two planes that intersect at an angle of β = angle(x, ˜x) =
2 angle(x, y). The probability of a random point ai lying in
2β
π , which is the fraction
A
of the unit sphere that lies either above or below both planes.
The probability of a measurement ai contributing to the
heads count is half the probability of it lying in
2 α.

2β
2π = 1
−

, or 1

−

A

x˜xySn 1Rha,xi<0ha,˜xi<0ha,xi<0ha,˜xi<0andSubmission and Formatting Instructions for ICML 2017

The probability of turning up n or more heads is therefore
given by

pcover(m, n; x, y) =
n
1
(cid:88)
−

(cid:19)k (cid:18)

(cid:18) 1
2

α

1

−

k=0

1
2

α

1

−

(cid:19)m

k

−

−

1 (cid:18)m

1

(cid:19)
.

−
k

(13)

Our ﬁnal result is obtained by applying Hoeffding’s inequal-
ity to (13).

7. Recovery Guarantees for PhaseMax

Using the covering result of Lemma 3, together with the
covering formulation of the exact recovery condition (4),
proving exact recovery of PhaseMax is now rather straight-
forward. We begin with the real-valued case.

Theorem 3. Consider the case of recovering a real-valued
Rn from m measurements of the form (1) with
signal x0
∈
1
i.i.d. and uniform vectors
. PhaseMax recovers
−
the true signal x0, with probability at least

ai ∈ S
{

n
R

}

pR(m, n)

1

exp

−

≥

−

−
2m

−
2

(cid:18)

(αm

α

2n)2

(cid:19)
,

−
π angle(x0, ˆx) and α(m

2

1) > 2n.

−

where α = 1

−

Proof. Consider the set of m independent and uniformly
n
m
sampled measurements
i=1. The aligned vec-
ai ∈ S
−
R
{
ai, x0
tors
are uniformly distributed
˜ai = phase(
)ai}
(cid:105)
(cid:104)
{
CR(x0). Exact reconstruction happens
over the half sphere
when the condition in Lemma 2 holds. To bound this proba-
bility, we invoke Lemma 3 with x = x0 and y = ˆx.

}

1

We have an analogous result in the complex case.

Theorem 4. Consider the case of recovering a complex-
Rn from m measurements of the form
valued signal x0
(1) with i.i.d. and uniform vectors
. PhaseMax
ai ∈ S
}
{
recovers the true signal x0, with probability at least

n
R

∈

−

1

pC(m, n)

1

exp

−

≥

−

−
4m

(cid:18)

(αm

4n)2

(cid:19)
,

where α = 1

2

π angle(x0, ˆx) and αm > 4n + 1.

Proof. Let
be aligned mea-
(cid:104)
surement vectors. Deﬁne the half sphere of aligned ascent
directions

phase(
{

)ai}
(cid:105)

ai, x0

=

−
˜ai}
{

δ
(cid:105) ∈
{
By Lemma 2, PhaseMax recovers x0 if

DC =

δ, ˆx

∈ S

| (cid:104)

−

1

n
C

R+
.
0 }

DC ⊂

(cid:91)

i

CC(˜ai).

(14)

Let us bound the probability of this event. Consider the
δ
. We now claim that (14) holds
set
= 0
A
}
{
whenever

δ, x0

(cid:105)(cid:61)

| (cid:104)

=

CC(ˆx)

∩ A ⊂

CC(˜ai).

(cid:91)

i

(15)

To prove this claim, consider some δ
∈ DC. To keep no-
tation light, we will assume without loss of generality that
x0, which
δ, x0
x0
(cid:104)
(cid:107)
is the projection of δ onto
. Suppose now that (15) holds.
Since δ(cid:48)
∈ CC(˜ai).
∈ CC(ˆx)
But then

(cid:107)2 = 1. Form the vector δ(cid:48) = δ + j

, there is some i with δ(cid:48)

∩ A

(cid:105)(cid:61)

A

δ, x0

x0, ˜ai(cid:105)(cid:60)

(cid:105)(cid:61)

(cid:104)

(16)

(17)

.

0

=

+

=

j
(cid:104)

≤ (cid:104)

δ(cid:48), ˜ai(cid:105)(cid:60)

δ, ˜ai(cid:105)(cid:60)
(cid:104)
δ, ˜ai(cid:105)(cid:60)
(cid:104)
We have used the fact
˜ai, x0
j
(cid:104)
(cid:105)
no real component. We see that δ
is proved.

δ, x0

(cid:105)(cid:61)(cid:104)

j

that

δ, x0
=
(cid:104)
(cid:104)
(cid:105)(cid:61)
, which is imaginary valued and thus has
∈ CC(˜ai), and the claim

x0, ˜ai(cid:105)

2

1

−

We now know that exact reconstruction happens when-
ever condition (15) holds. Note that the sphere Sn
is
C
isomorphic to S2n
is isomorphic to the
, and the set
R
A
sphere S2n
are uniformly dis-
. The aligned vectors
˜ai}
R
{
CC(x0)
, which is isomor-
tributed over a half sphere in
∩ A
2
phic to the upper half sphere in S2n
. The probability of
−
R
these vectors covering the cap
is thus given by
CC(ˆx)
1; x0, ˆx) from Lemma 3, which is at least
pcover(m, 2n

∩ A

−

−

1

−

−

(cid:18)

(αm

1

exp

−

4n + 2)2
4

(cid:19)
.

α
−
4m

−
−

We can simplify this by using the fact that α < 1. We
also throw away the small constants in the numerator and
denominator, which weakens the bound very slightly but
tidies up the result.

8. Experiments and Discussion

8.1. Initialization Methods

A variety of methods exist for generating the initial
guess x0. The simplest approach is to use a random vec-
tor; see (Goldstein & Studer, 2016) for a corresponding
analysis and exact recovery proof in this case. A more pow-
erful method is the truncated spectral initializer (Chen &
Cand`es, 2015), which is a reﬁnement of the method put
forward in (Netrapalli et al., 2013). A detailed analysis of
such initializers is provided in (Lu & Li, 2017). As proved
in Prop. 8 of (Chen & Cand`es, 2015), for any δ < √2,
there is a constant c0 such that, with probability exceeding
c0m), a unit-length version of the approxima-
1
tion vector ˆx computed by the truncated spectral initializer
, provided that m > c1n for
satisﬁes 1

x0, ˆx

exp(

−

−

δ2
2 ≤ |(cid:104)

−

(cid:105)|

Submission and Formatting Instructions for ICML 2017

Table 1. Comparison of theoretical recovery guarantees for noiseless phase retrieval.

Algorithm

PhaseMax

Sample complexity

m > (4n − 1)/α + 1

PhaseLift (Cand`es & Li, 2014) m ≥ c0n

TWF (Cand`es & Li, 2014)

TAF (Wang et al., 2016)

m ≥ c0n

m ≥ c0n

Lower bound on pC(m, n)
1 − e−(α(m−1)−4n+2)2/(2m−2)
1 − c1e−c2m
1 − c1e−c2m

1 − (m + 5)e−n/2 − c1e−c2m − 1/n2
(cid:1)
(cid:0)
− sin4(α)
M − 32
N

log

(cid:0)

(cid:1)
/16

sin4(α)

8e
sin4(α)

1 − 8e

(Bahmani & Romberg, 2016)

m > 32

sin4(α) log(cid:0)

8e
sin4(α)

(cid:1)n

(Hand & Voroninski, 2016)a

m > c0n

1 − 6e−c2m

aThe theory only guarantees recovery for real-valued measurements.

some constant c1 > 0. This implies that the approximation
accuracy satisﬁes

α =1

2
π

−

angle(x0, ˆx)
(cid:18)

arccos

1

2
π

(cid:19)

δ2
2

−

1

≥

−

> 0

(18)

with high probability.

This motivates the following process that recovers x0 using
a number of measurements that grows linearly with n. First,
choose some δ < √2 and calculate α from (18). Next,
generate a spectral initializer ˆx using c1 random Gaussian
measurements. This initializer has accuracy α with high
probability. Finally, using 5n/α (the constant in this expres-
sion must be larger than 4 to guarantee recovery with high
probability) additional random Gaussian measurements, re-
cover the vector x0 using PhaseMax. This recovery step
succeeds with high probability when n is large. This pro-
cess recovers x0 using (5/α + c1)n measurements, which is
linear in n. For a more detailed analysis with no unspeciﬁed
constants, see (Goldstein & Studer, 2016).

A simpler recovery approach only samples max
n
5/α, c1}
{
measurements, and then uses the same set of measurements
for both the initialization and recovery. This process works
well in practice, and is used in the experiments below. Tech-
nically, our results assume the measurements
are inde-
pendent of ˆx, and so our theory does not formally guarantee
convergence in this case. For an analysis that considers
the case where
and ˆx are dependent, we refer to the
ai}
{
analysis in (Bahmani & Romberg, 2016).

ai}
{

8.2. Comparison to Other Phase Retrieval Methods

We compare PhaseMax with other recovery methods, in-
cluding lifted convex methods and non-convex approaches.
Table 1 lists the sample complexity (measurements needed
to achieve exact recovery with 0.5 probability) of various
phase retrieval methods as a function of the number of un-

knowns n. We also list the probability of reconstruction
from m measurements. We see that PhaseMax requires the
same sample complexity (O(n)) as compared to PhaseLift,
TWF, and TAW, when used together with the truncated spec-
tral initializer proposed in (Cand`es & Li, 2014).

The recovery bounds for all other methods require unspec-
iﬁed constants (ci in Table 1) that are generally extremely
large and require a lower bound on the initialization accu-
racy. In contrast, the bounds for PhaseMax contain no un-
speciﬁed constants, explicitly depend on the approximation
factor α, and our new analytical approach yields extremely
sharp bounds (see below for the details).

We also compare in Table 1 to a different analysis of the
PhaseMax formulation by (Bahmani & Romberg, 2016) that
appeared shortly before our own, and to a later analysis by
(Hand & Voroninski, 2016). By using methods from ma-
chine learning theory, (Bahmani & Romberg, 2016) produce
exact reconstruction bounds that, for a speciﬁed value of α,
are uniform with respect to the initialization ˆx, and thus
guarantee exact signal recovery in the case that ˆx is depen-
dent on the measurement vectors. The analysis presented
here is weaker in the sense that is does not have this uni-
formity property, but stronger in the sense that it produces
tighter bounds without unspeciﬁed constants. The bounds
by (Hand & Voroninski, 2016) require unspeciﬁed constants,
but the authors show that PhaseMax can be analyzed using
standard concentration of measure arguments.

8.3. Tightness of Guarantees

By using strong concentration bounds for the unit sphere,
our analysis produces sharp recovery guarantees that lie
close to behavior observed in practice. In Figure 2, we use
random Gaussian test problems and the accelerated gradient-
based solver described in (Goldstein et al., 2014) to plot
the empirical and theoretical probabilities of exact signal
recovery for n = 100 and n = 500 measurements while
varying the accuracy β = angle(ˆx, x0) of the initial guess.

Submission and Formatting Instructions for ICML 2017

Figure 2. Comparison between the empirical success probability (solid lines) and our theoretical lower bound (dashed lines) for varying
angles β between the true signal and the approximation vector. Our theoretical results accurately characterize the empirical success
probability of PhaseMax. Furthermore, PhaseMax exhibits a sharp phase transition for larger dimensions.

We declared exact recovery when the relative error of the
recovered signal fell below 10−

5.

Our theoretical bounds tend to agree fairly closely with
observations, and generally require fewer than 50% more
measurements than is needed in practice. We also observe
a sharp phase transition between inaccurate and accurate
recovery, as predicted by our theory.

8.4. Performance Limits of PhaseMax

To compare PhaseMax to other phase retrieval methods, we
observe the accuracy of signal reconstruction as a function
of the number of measurements. We emphasize that this
comparison is only done in the random Gaussian problem
setting, and results may differ with different types of signal,
measurement, and noise models. The sole purpose of this
experiment is to explore the efﬁcacy and limits of PhaseMax,
and to test the tightness of the predicted recovery guarantees.
For an extensive comparison between existing methods, see
(Waldspurger et al., 2015; Jaganathan et al., 2015)). We com-
pare the Gerchberg-Saxton algorithm (Gerchberg & Saxton,
1972), the Fienup algorithm (Fienup, 1982), the truncated
Wirtinger ﬂow (Chen & Cand`es, 2015), and PhaseMax. All
methods were initialized using the truncated spectral initial-
izer (Chen & Cand`es, 2015).

We also run simulations using the semideﬁnite relaxation
method PhaseLift (Cand`es et al., 2013) implemented using a
proximal gradient solver. PhaseLift, and its equivalent dual
formulation PhaseCut (Waldspurger et al., 2015), is the only
convex alternative to PhaseMax. However, unlike Phase-
Max, PhaseLift/PhaseCut “lifts” the problem to a higher

dimension and squares the number of unknowns.

Figure 3 reveals that PhaseMax requires larger oversam-
pling ratios m/n to enable faithful signal recovery com-
pared to non-convex phase-retrieval algorithms that oper-
ate in the original signal dimension. This is because the
truncated spectral initializer requires oversampling ratios
of about six or higher to yield sufﬁciently accurate ap-
proximation vectors ˆx that enable PhaseMax to succeed.
While PhaseMax does not achieve exact reconstruction with
the lowest number of measurements, it is convex, operates
in the original signal dimension, can be implemented via
solvers for Basis Pursuit, and comes with sharp perfor-
mance guarantees that do not sweep constants under the rug
(cf. Figure 2).

The convexity of PhaseMax enables a natural extension
to sparse phase retrieval (Jaganathan et al., 2013; Shecht-
man et al., 2014) or other signal priors (e.g., total variation,
group sparsity, or bounded inﬁnity norm) that can be for-
mulated with convex functions. Such non-differentiable
priors cannot be efﬁciently minimized using simple gradient
descent methods (which form the basis of Wirtinger or am-
plitude ﬂow, and many other methods), but can potentially
be solved using standard convex solvers when combined
with the PhaseMax formulation.

9. Conclusions

We have proposed a convex relaxation for phase retrieval
problems called PhaseMax that does not require lifting. Us-
ing methods from geometric probability, we have provided
tight bounds on the probability of correct signal recovery.

2468101200.20.40.60.81Oversamplingratiom/nSuccessprobabilitypC(m,n)β=45◦β=36◦β=25◦2468101200.20.40.60.81Oversamplingratiom/nSuccessprobabilitypC(m,n)β=45◦β=36◦β=25◦Submission and Formatting Instructions for ICML 2017

(a) n = 100

(b) n = 500

Figure 3. Comparison of the relative reconstruction error. We use the truncated spectral initializer for Gerchberg-Saxton (GS), Fienup,
truncated Wirtinger ﬂow (TWF), truncated amplitude ﬂow (TAF), and PhaseMax. PhaseMax does not achieve exact recovery for the
lowest number of measurements among the considered methods, but is convex, operates in the original dimension, and comes with sharp
performance guarantees. PhaseLift only terminates in reasonable computation time for n = 100.

The proposed problem and its analysis also represents a
radical departure, both in theory and algorithms, from con-
ventional methods for convex or semideﬁnite relaxation. By
providing a convex relaxation for phase retrieval in the na-
tive parameter space, our approach opens the door for using
a broad range of convex optimization routines, regularizers,
and priors to solve phase retrieval or related problems in
machine learning, computer vision, or signal processing.

Finally, the new analytical methods used in this paper have
recently been used to prove tight reconstruction bounds
for bi-convex problems outside the ﬁeld of phase retrieval
(Aghasi et al., 2017), and may be broadly applicable to a
wide range of signal processing problems.

Acknowledgments

The work of T. Goldstein was supported in part by the
US National Science Foundation (NSF) under grant CCF-
1535902, by the US Ofﬁce of Naval Research under grant
N00014-17-1-2078, and by the Sloan Foundation. The work
of C. Studer was supported in part by Xilinx, Inc. and by
the US NSF under grants ECCS-1408006, CCF-1535897,
and CAREER CCF-1652065.

References

Aghasi, A., Ahmed, A., and Hand, P. Branchhull: Convex
bilinear inversion from the entrywise product of signals
with known signs. arXiv preprint :1702.04342, Feb. 2017.

Bahmani, S. and Romberg, J. Phase retrieval meets statisti-
cal learning theory: A ﬂexible convex relaxation. arXiv
preprint: 1610.04210, Oct. 2016.

Cand`es, E. J. and Li, X. Solving quadratic equations via
PhaseLift when there are about as many equations as
unknowns. Found. Comput. Math., 14(5):1017–1026,
Oct. 2014.

Cand`es, E. J., Strohmer, T., and Voroninski, V. PhaseLift:
Exact and stable signal recovery from magnitude mea-
surements via convex programming. Commun. Pure Appl.
Math., 66(8):1241–1274, 2013.

Cand`es, J. E., Li, X., and Soltanolkotabi, M. Phase retrieval
via Wirtinger ﬂow: Theory and algorithms. IEEE Trans.
Inf. Theory, 61(4):1985–2007, Feb. 2015.

Chen, Y. and Cand`es, E. Solving random quadratic systems
of equations is nearly as easy as solving linear systems.
In Adv. Neural Inf. Process. Syst., pp. 739–747, 2015.

Fienup, J. R. Phase retrieval algorithms: a comparison. Appl.

Opt., 21(15):2758–2769, Aug. 1982.

F¨uredi, Z. Random polytopes in the d-dimensional cube.

Disc. Comput. Geom., 1(4):315–319, Dec. 1986.

Gerchberg, R. W. and Saxton, W. O. A practical algorithm
for the determination of phase from image and diffraction
plane pictures. Optik, 35:237–246, Aug. 1972.

24681012−80−60−40−200Oversamplingratiom/nRelativereconstructionerror[dB]GSFienupTWFTAFPhaseLiftPhaseMax24681012−80−60−40−200Oversamplingratiom/nRelativereconstructionerror[dB]GSFienupTWFTAFPhaseMaxSubmission and Formatting Instructions for ICML 2017

Gilbert, E. N. The probability of covering a sphere with n
circular caps. Biometrika, 52(3/4):323–330, Dec. 1965.

Goldstein, T. and Studer, C. PhaseMax: convex phase
retrieval via basis pursuit. arXiv preprint: 1610.07531,
Oct. 2016.

Goldstein, T., Studer, C., and Baraniuk, R. A ﬁeld guide to
forward-backward splitting with a FASTA implementa-
tion. arXiv preprint: 1411.3406, Feb. 2014.

Goldstein, T., Li, M., and Yuan, X. Adaptive primal-dual
splitting methods for statistical learning and image pro-
cessing. In Advances in Neural Information Processing
Systems, pp. 2089–2097, 2015.

Hand, P. and Voroninski, V. An elementary proof of convex
phase retrieval in the natural parameter space via the
linear program PhaseMax. arXiv preprint: 1611.03935,
Nov. 2016.

Jaganathan, K., Oymak, S., and Hassibi, B. Sparse phase
retrieval: Convex algorithms and limitations. In Proc.
IEEE Int. Symp. Inf. Theory (ISIT), pp. 1022–1026, Jul.
2013.

Jaganathan, K., Eldar, Y. C., and Hassibi, B. Phase retrieval:
An overview of recent developments. arXiv:1510.07713,
Oct. 2015.

Lu, Y. M. and Li, G. Phase transitions of spectral initializa-
tion for high-dimensional nonconvex estimation. arXiv
preprint: 1702.06435, 2017.

Netrapalli, P., Jain, P., and Sanghavi, S. Phase retrieval using
alternating minimization. In Adv. Neural Inf. Process.
Syst., pp. 2796–2804, 2013.

Schl¨aﬂi, L. Gesammelte Mathematische Abhandlungen I.

Springer Basel, 1953.

Schniter, P. and Rangan, S. Compressive phase retrieval via
generalized approximate message passing. IEEE Trans.
Sig. Process., 63(4):1043–1055, Feb. 2015.

Shechtman, Y., Beck, A., and Eldar, Y. C. GESPAR: efﬁ-
cient phase retrieval of sparse signals. IEEE Trans. Sig.
Process., 62(4):928–938, Jan. 2014.

Studer, C., Goldstein, T., Yin, W., and Baraniuk, R. G.
Democratic representations. arXiv preprint: 1401.3420,
Jan. 2014.

Waldspurger, I., d’Aspremont, A., and Mallat, S. Phase
recovery, maxcut and complex semideﬁnite programming.
Math. Prog., 149(1-2):47–81, Feb. 2015.

Wang, G., Giannakis, G. B., and Eldar, Y. C. Solving
systems of random quadratic equations via truncated am-
plitude ﬂow. arXiv: 1605.08285, Jul. 2016.

Wendel, J. G. A problem in geometric probability. Math.

Scand., 11:109–111, 1962.

