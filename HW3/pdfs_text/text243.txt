Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

Josiah P. Hanna 1 Philip S. Thomas 2 3 Peter Stone 1 Scott Niekum 1

Abstract

We consider the task of evaluating a policy for
a Markov decision process (MDP). The standard
unbiased technique for evaluating a policy is to
deploy the policy and observe its performance.
We show that the data collected from deploying
a different policy, commonly called the behavior
policy, can be used to produce unbiased estimates
with lower mean squared error than this standard
technique. We derive an analytic expression for
the optimal behavior policy—the behavior pol-
icy that minimizes the mean squared error of the
resulting estimates. Because this expression de-
pends on terms that are unknown in practice, we
propose a novel policy evaluation sub-problem,
behavior policy search: searching for a behav-
ior policy that reduces mean squared error. We
present a behavior policy search algorithm and
empirically demonstrate its effectiveness in low-
ering the mean squared error of policy perfor-
mance estimates.

1. Introduction

Many sequential decision problems,
including diabetes
treatment (Bastani, 2014), digital marketing (Theocharous
et al., 2015), and robot control (Lillicrap et al., 2015), are
modeled as Markov decision processes (MDPs) and solved
using reinforcement learning (RL) algorithms. One impor-
tant problem when applying RL to real problems is policy
evaluation. The goal in policy evaluation is to estimate the
expected return (sum of rewards) produced by a policy. We
refer to this policy as the evaluation policy, πe. The stan-
dard policy evaluation approach is to repeatedly deploy πe
and average the resulting returns. While this na¨ıve Monte
Carlo estimator is unbiased, it may have high variance.

1The University of Texas at Austin, Austin, Texas, USA
2The University of Massachusetts, Amherst, Massachusetts, USA
3Carnegie Mellon University, Pittsburgh, Pennsylvania, USA.
Correspondence to: Josiah P. Hanna <jphanna@cs.utexas.edu>.

Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

Methods that evaluate πe while selecting actions according
to πe are termed on-policy. Previous work has addressed
variance reduction for on-policy returns (Zinkevich et al.,
2006; White & Bowling, 2009; Veness et al., 2011). An
alternative approach is to estimate the performance of πe
while following a different, behavior policy, πb. Methods
that evaluate πe with data generated from πb are termed off-
policy. Importance sampling (IS) is one standard approach
for using off-policy data in RL. IS reweights returns ob-
served while executing πb such that they are unbiased esti-
mates of the performance of πe.

Presently, IS is usually used when off-policy data is already
available or when executing πe is impractical. If πb is not
chosen carefully, IS often has high variance (Thomas et al.,
2015). For this reason, an implicit assumption in the RL
community has generally been that on-policy evaluation is
more accurate when it is feasible. However, IS can also be
used for variance reduction when done with an appropri-
ately selected distribution of returns (Hammersley & Hand-
scomb, 1964). While IS-based variance reduction has been
explored in RL, this prior work has required knowledge of
the environment’s transition probabilities and remains on-
policy (Desai & Glynn, 2001; Frank et al., 2008; Ciosek
& Whiteson, 2017).
In contrast to this earlier work, we
show how careful selection of the behavior policy can lead
to lower variance policy evaluation than using the evalua-
tion policy and do not require knowledge of the environ-
ment’s transition probabilities.

In this paper, we formalize the selection of πb as the behav-
ior policy search problem. We introduce a method for this
problem that adapts the policy parameters of πb with gradi-
ent descent on the variance of importance-sampling. Em-
pirically we demonstrate behavior policy search with our
method lowers the mean squared error of estimates com-
pared to on-policy estimates. To the best of our knowledge,
this work is the ﬁrst to propose adapting the behavior pol-
icy to obtain better policy evaluation in RL. Furthermore
we present the ﬁrst method to address this problem.

2. Preliminaries

This section details the policy evaluation problem setting,
the Monte Carlo and Advantage Sum on-policy methods,
and importance-sampling for off-policy evaluation.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

2.1. Background

2.3. Advantage Sum Estimates

We use notational standard MDPNv1 (Thomas, 2015), and
for simplicity, we assume that S, A, and R are ﬁnite.1 Let
H := (S0, A0, R0, S1, . . . , SL, AL, RL) be a trajectory
and g(H) := (cid:80)L
t=0 γtRt be the discounted return of tra-
jectory H. Let ρ(π) := E[g(H)|H ∼ π] be the expected
discounted return when the stochastic policy π is used from
S0 sampled from the initial state distribution. In this work,
we consider parameterized policies, πθ, where the distribu-
tion over actions is determined by the vector θ. We assume
that the transitions and reward function are unknown and
that L is ﬁnite.

We are given an evaluation policy, πe, for which we would
like to estimate ρ(πe). We assume there exists a policy
parameter vector θe such that πe = πθe and that this vec-
tor is known. We consider an incremental setting where,
at iteration i, we sample a single trajectory Hi with a pol-
icy πθi and add {Hi, θi} to a set D. We use Di to denote
the set at iteration i. Methods that always (i.e., ∀i) choose
θi = θe are on-policy; otherwise, the method is off-policy.
A policy evaluation method, PE, uses all trajectories in Di
to estimate ρ(πe). Our goal is to design a policy evalua-
tion algorithm that produces estimates of ρ(πe) that have
low mean squared error (MSE). Formally, the goal of pol-
icy evaluation with PE is to minimize (PE(Di) − ρ(πe))2.
While other measures of policy evaluation accuracy could
be considered, we follow earlier work in using MSE (e.g.,
(Thomas & Brunskill, 2016; Precup et al., 2000)).

We focus on unbiased estimators of ρ(πe). While bi-
ased estimators (e.g., bootstrapping methods (Sutton &
Barto, 1998), approximate models (Kearns & Singh, 2002),
etc.) can sometimes produce lower MSE estimates they are
problematic for high risk applications requiring conﬁdence
intervals. For unbiased estimators, minimizing variance is
equivalent to minimizing MSE.

2.2. Monte-Carlo Estimates

Perhaps the most commonly used policy evaluation method
is the on-policy Monte-Carlo (MC) estimator. The estimate
of ρ(πe) at iteration i is the average return:

MC(Di) :=

1
i + 1

i
(cid:88)

L
(cid:88)

j=0

t=0

γtRt =

g(Hj).

1
i + 1

i
(cid:88)

j=0

Like the Monte-Carlo estimator, the advantage sum (ASE)
estimator selects θi = θe for all i. However, it intro-
duces a control variate to reduce the variance without intro-
ducing bias. This control variate requires an approximate
model of the MDP to be provided. Let the reward func-
tion of this model be given as ˆr(s, a). Let ˆqπe(st, at) =
E[(cid:80)L
ˆr(st(cid:48), at(cid:48))] and ˆvπe (st) = E[ˆqπe(st, at)|at ∼
πe], i.e., the action-value function and state-value function
of πe in this approximate model. Then, the advantage sum
estimator is given by:

t(cid:48)=t γt(cid:48)

AS(Di) :=

γt(Rt − ˆqπe (St, At) + ˆvπe (St)).

1
i + 1

i
(cid:88)

L
(cid:88)

j=0

t=0

Intuitively, ASE is replacing part of the randomness of the
Monte Carlo return with the known expected return under
the approximate model. Provided qπe (St, At) − ˆvπe(St) is
sufﬁciently correlated with Rt, the variance of ASE is less
than that of MC.

Notice that, like the MC estimator, the ASE estimator is
on-policy, in that the behavior policy is always the policy
that we wish to evaluate. Intuitively it may seems like this
choice should be optimal. However, we will show that it is
not—selecting behavior policies that are different from the
evaluation policy can result in estimates of ρ(πe) that have
lower variance.

2.4. Importance Sampling

Importance Sampling is a method for reweighting returns
from a behavior policy, θ, such that they are unbiased re-
turns from the evaluation policy. In RL, the re-weighted IS
return of a trajectory, H, sampled from πθ is:

IS(H, θ) := g(H)

L
(cid:89)

t=0

πe(St|At)
πθ(St|At)

.

The IS off-policy estimator is then a Monte Carlo estimate
of E [IS(H, θ)|H ∼ πθ]:

IS(Di) :=

IS(Hj, θj).

1
i + 1

i
(cid:88)

j=0

This estimator is unbiased and strongly consistent given
mild assumptions.2 However, this method can have high
variance.

In RL, importance sampling allows off-policy data to be
used as if it were on-policy. In this case the variance of
the IS estimate is often much worse than the variance of
on-policy MC estimates because the behavior policy is not

1The methods, and theoretical results discussed in this paper
are applicable to both ﬁnite and inﬁnite S, A and R as well as
partially-observable Markov decision processes.

2Being a strongly consistent estimator of ρ(πe) means that

(cid:16)

(cid:17)

Pr

lim
i→∞

MC(Di) = ρ(πe)

If ρ(πe) exists, MC is
strongly consistent by the Khintchine Strong law of large num-
bers (Sen & Singer, 1993).

= 1.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

chosen to minimize variance, but is a policy that is dictated
by circumstance.

3. Behavior Policy Search

Importance sampling was originally intended as a variance
reduction technique for Monte Carlo evaluation (Hammers-
ley & Handscomb, 1964). When an evaluation policy rarely
samples trajectories with high magnitude returns a Monte
Carlo evaluation will have high variance. If a behavior pol-
icy can increase the probability of observing such trajecto-
ries then the off-policy IS estimate will have lower variance
than an on-policy Monte Carlo estimate. In this section we
ﬁrst describe the theoretical potential for variance reduction
with an appropriately selected behavior policy. In general
this policy will be unknown. Thus, we propose a policy
evaluation subproblem — the behavior policy search prob-
lem — solutions to which will adapt the behavior policy to
provide lower mean squared error policy performance es-
timates. To the best of our knowledge, we are the ﬁrst to
propose behavior policy adaptation for policy evaluation.

3.1. The Optimal Behavior Policy

An appropriately selected behavior policy can lower vari-
ance to zero. While this fact is generally known for
importance-sampling, we show here that this policy exists
for any MDP and evaluation policy under two restrictive
assumptions: all returns are positive and the domain is de-
terministic. In the following section we describe how an
initial policy can be adapted towards the optimal behavior
policy even when these conditions fail to hold.
Let wπ(H) := (cid:81)L
π(cid:63)
b such that for any trajectory, H:

t=0 π(At|St). Consider a behavior policy

ρ(πe) = IS(H, π(cid:63)

b ) = g(H)

wπe(H)
wπ(cid:63)
(H)

b

.

Rearranging the terms of this expressions yields:

wπ(cid:63)

b

(H) = g(H)

wπe (H)
ρ(πe)

.

Thus, if we can select π(cid:63)
b such that the probability of ob-
serving any H ∼ π(cid:63)
ρ(πe) times the likelihood of ob-
serving H ∼ πe then the IS estimate has zero MSE with
only a single sampled trajectory. Regardless of g(H), the
importance-sampled return will equal ρ(πe).

b is g(H)

Furthermore, the policy π(cid:63)
b exists within the space of all
feasible stochastic policies. Consider that a stochastic pol-
icy can be viewed as a mixture policy over time-dependent
(i.e., action selection depends on the current time-step) de-
terministic policies. For example, in an MDP with one
state, two actions and a horizon of L there are 2L possi-
ble time-dependent deterministic policies, each of which

deﬁnes a unique sequence of actions. We can express any
evaluation policy as a mixture of these deterministic poli-
cies. The optimal behavior policy π(cid:63)
b can be expressed sim-
ilarly and thus the optimal behavior policy exists.

Unfortunately, the optimal behavior policy depends on the
unknown value ρ(πe) as well as the unknown reward func-
tion R (via g(H)). Thus, while there exists an optimal be-
havior policy for IS – which is not πe – in practice we can-
not analytically determine π(cid:63)
b may not be
representable by any θ in our policy class.

b . Additionally, π(cid:63)

3.2. The Behavior Policy Search Problem

Since the optimal behavior policy cannot be analytically
determined, we instead propose the behavior policy search
(BPS) problem for ﬁnding πb that lowers the MSE of esti-
mates of ρ(πe). A BPS problem is deﬁned by the inputs:

off-policy

1. An evaluation policy πe with policy parameters θe.
policy
2. An

algorithm,
OPE(H, θ), that takes a trajectory, H ∼ πθ, or,
alternatively, a set of trajectories, and returns an
estimate of ρ(πe).

evaluation

A BPS solution is a policy, πθb such that off-policy esti-
mates with OPE have lower MSE than on-policy estimates.
Methods for this problem are BPS algorithms.

Recall we have formalized policy evaluation within an in-
cremental setting where one trajectory for policy evaluation
is generated each iteration. At the ith iteration, a BPS algo-
rithm selects a behavior policy that will be used to generate
a trajectory, Hi. The policy evaluation algorithm, OPE,
then estimates ρ(πe) using trajectories in Di. Naturally,
the selection of the behavior policy depends on how OPE
estimates ρ(πe).

In a BPS problem, the ith iteration proceeds as follows.
First, given all of the past behavior policies, {θi}i−1
i=0, and
the resulting trajectories, {Hi}i−1
i=0, the BPS algorithm must
select θi. The policy πθi is then run for one episode to
create the trajectory Hi. Then the BPS algorithm uses
:=
OPE to estimate ρ(πe) given the available data, Di
{(θi, Hi)}i
In this paper, we consider the one-step
problem of selecting θi and estimating ρ(πe) at iteration
i in a way that minimizes MSE. That is, we do not consider
how our selection of θi will impact our future ability to se-
lect an appropriate θj for j > i and thus to produce more
accurate estimates in the future.

i=0.

One natural question is:
if we are given a limit on the
number of trajectories that can be sampled, is it better to
“spend” some of our limited trajectories on BPS instead
of using on-policy estimates? Since each OP E(Hi, θi)
is an unbiased estimator of ρ(πe), we can use all sampled
trajectories to compute OPE(Di). Provided for all itera-

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

tions, Var[OPE(H, θi)] ≤ V ar[M C] then, in expectation,
a BPS algorithm will always achieve lower MSE than MC,
showing that it is, in fact, worthwhile to do so. This claim
is supported by our empirical study.

4. Behavior Policy Gradient Theorem

We now introduce our primary contributions: an analytic
expression for the gradient of the mean squared error of
the IS estimator and a stochastic gradient descent algorithm
that adapts θ to minimize the MSE between the IS estimate
and ρ(πe). Our algorithm — Behavior Policy Gradient
(BPG) — begins with on-policy estimates and adapts the
behavior policy with gradient descent on the MSE with re-
spect to θ. The gradient of the MSE with respect to the
policy parameters is given by the following theorem:
Theorem 1.

∂
∂θ

MSE[IS(H, θ)] = E

(cid:34)
− IS(H, θ)2

L
(cid:88)

t=0

∂
∂θ

(cid:35)

log πθ(At|St)

where the expectation is taken over H ∼ πθ.

Proof. Proofs for all theoretical results are included in
Appendix A of an extended version available at http:
//arxiv.org/abs/1706.03469.

BPG uses stochastic gradient descent in place of exact gra-
dient descent: replacing the intractable expectation in The-
orem 1 with an unbiased estimate of the true gradient. In
our experiments, we sample a batch, Bi, of k trajectories
with πθi to lower the variance of the gradient estimate at
iteration i. In the BPS setting, sampling a batch of trajec-
tories is equivalent to holding θ ﬁxed for k iterations and
then updating θ with the k most recent trajectories used to
compute the gradient estimate.

Full details of BPG are given in Algorithm 1. At itera-
tion i, BPG samples a batch, Bi, of k trajectories and adds
{(θi, Hi)k
i=0} to a data set D (Lines 4-5). Then BPG up-
dates θ with an empirical estimate of Theorem 1 (Line 6).
After n iterations, the BPG estimate of ρ(πe) is IS(Dn) as
deﬁned in Section 2.4.

Given that the step-size, αi, is consistent with standard gra-
dient descent convergence conditions, BPG will converge
to a behavior policy that locally minimizes the variance
(Bertsekas & Tsitsiklis, 2000). At best, BPG converges to
the globally optimal behavior policy within the parameter-
ization of πe. Since the parameterization of πe determines
the class of representable distributions it is possible that
the theoretically optimal behavior policy is unrepresentable
under this parameterization. Nevertheless, a suboptimal be-
havior policy still yields better estimates of ρ(πe), provided
it decreases variance compared to on-policy returns.

Algorithm 1 Behavior Policy Gradient
Input: Evaluation policy parameters, θe, batch size k, a
step-size for each iteration, αi, and number of iterations n.
Output: Final behavior policy parameters θn and the IS
estimate of ρ(πe) using all sampled trajectories.
1: θ0 ← θe
2: D0 = {}
3: for all i ∈ 0...n do
4:
5:

Bi = Sample k trajectories H ∼ πθi
Di+1 = Di ∪ Bi

6:

θi+1 = θi + αi
k

IS(H, θ)2

log πθi (At|St)

(cid:88)

H∈B

L
(cid:88)

t=0

∂
∂θ

7: end for
8: Return θn, IS(Dn)

4.1. Control Variate Extension

In cases where an approximate model is available, we can
further lower variance adapting the behavior policy of the
doubly robust estimator (Jiang & Li, 2016; Thomas &
Brunskill, 2016). Based on a similar intuition as the Advan-
tage Sum estimator (Section 2.3), the Doubly Robust (DR)
estimator uses the value functions of an approximate model
as a control variate to lower the variance of importance-
sampling.3 We show here that we can adapt the behavior
policy to lower the mean squared error of DR estimates.
We denote this new method DR-BPG for Doubly Robust
Behavior Policy Gradient.
Let wπ,t(H) = (cid:81)t
i=0 π(At|St) and recall that ˆvπe and ˆqπe
are the state and action value functions of πe in the approx-
imate model. The DR estimator is:

DR(H, θ) := ˆv(S0)+

(Rt−ˆqπe (St, At)+ˆvπe (St+1)).

L
(cid:88)

t=0

wπe,t
wπθ ,t

We can reduce the mean squared error of DR with gradient
descent using unbiased estimates of the following corollary
to Theorem 1:
Corollary 1.

∂
∂θ

MSE [DR(H, θ)] = E[(DR(H, θ)2

log πθ(At|St)

L
(cid:88)

t=0

∂
∂θ

− 2 DR(H, θ)(

log πθ(Ai|Si))]

L
(cid:88)

t=0

γtδt

wπe,t
wθ,t

t
(cid:88)

i=0

∂
∂θ

where δt = Rt − ˆq(St, At) + ˆv(St+1) and the expectation
is taken over H ∼ πθ.

The ﬁrst term of ∂
∂θ M SE is analogous to the gradient of
the importance-sampling estimate with IS(H, θ) replaced

3DR lowers the variance of per-decision importance-sampling

which importance samples the per time-step reward.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

by DR(H, θ). The second term accounts for the covariance
of the DR terms.

AS and DR both assume access to a model, however, they
make no assumption about where the model comes from
except that it must be independent of the trajectories used to
compute the ﬁnal estimate. In practice, AS and DR perform
best when all trajectories are used to estimate the model and
then used to estimate ρ(πe) (Thomas & Brunskill, 2016).
However, for DR-BPG, changes to the model change the
surface of the MSE objective we seek to minimize and thus
DR-BPG will only converge once the model stops chang-
ing. In our experiments, we consider both a changing and
a ﬁxed model.

4.2. Connection to REINFORCE

BPG is closely related to existing work in policy gradi-
ent RL (c.f., (Sutton et al., 2000)) and we draw connec-
tions between one such method and BPG to illustrate how
BPG changes the distribution of trajectories. REINFORCE
(Williams, 1992) attempts to maximize ρ(πθ) through gra-
dient ascent on ρ(πθ) using the following unbiased gradient
of ρ(πθ):

∂
∂θ

(cid:34)

L
(cid:88)

t=0

∂
∂θ

ρ(πθ) = E

g(H)

log πθ(At|St)

H ∼ πθ

.

(cid:35)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Intuitively, REINFORCE increases the probability of all
actions taken during H as a function of g(H). This up-
date increases the probability of actions that lead to high
return trajectories. BPG can be interpreted as REIN-
FORCE where the return of a trajectory is the square of
its importance-sampled return. Thus BPG increases the
probability of all actions taken along H as a function of
IS(H, θ)2. The magnitude of IS(H, θ)2 depends on two
qualities of H:

1. g(H)2 is large (i.e., a high magnitude event).
2. H is rare relative to its probability under the evalua-

tion policy (i.e., (cid:81)L

πe(At|St)
πθ (At|St) is large).

t=0

These two qualities demonstrate a balance in how BPG
changes trajectory probabilities. Increasing the probabil-
ity of a trajectory under πθ will decrease IS(H, θ)2 and so
BPG increases the probability of a trajectory when g(H)2
is large enough to offset the decrease in IS(H, θ)2 caused
by decreasing the importance weight.

5. Empirical Study

This section presents an empirical study of variance reduc-
tion through behavior policy search. We design our exper-
iments to answer the following questions:

• Can behavior policy search with BPG reduce policy
evaluation MSE compared to on-policy estimates in

both tabular and continuous domains?

• Does adapting the behavior policy of the Doubly Ro-
bust estimator with DR-BPG lower the MSE of the
Advantage Sum estimator?

• Does the rarety of actions that cause high magnitude
rewards affect the performance gap between BPG and
Monte Carlo estimates?

5.1. Experimental Set-up

We address our ﬁrst experimental question by evaluating
BPG in three domains. We brieﬂy describe each domain
here; full details are available in appendix C.

The ﬁrst domain is a 4x4 Gridworld. We obtain two evalu-
ation policies by applying REINFORCE to this task, start-
ing from a policy that selects actions uniformly at random.
We then select one evaluation policy, π1, from the early
stages of learning – an improved policy but still far from
converged – and one after learning has converged, π2. We
run all experiments once with πe := π1 and a second time
with πe := π2.

Our second and third tasks are the continuous control Cart-
pole Swing Up and Acrobot tasks implemented within RL-
LAB (Duan et al., 2016). The evaluation policy in each do-
main is a neural network that maps the state to the mean of a
Gaussian distribution. Policies are partially optimized with
trust-region policy optimization (Schulman et al., 2015) ap-
plied to a randomly initialized policy.

5.2. Main Results

Gridworld Experiments Figure 1 compares BPG to
Monte Carlo for both Gridworld policies, π1 and π2. Our
main point of comparison is the mean squared error (MSE)
of both estimates at iteration i over 100 trials. For π1, BPG
signiﬁcantly reduces the MSE of on-policy estimates (Fig-
ure 1a). For π2, BPG also reduces MSE, however, it is only
a marginal improvement.

At the end of each trial we used the ﬁnal behavior pol-
icy to collect 100 more trajectories and estimate ρ(πe). In
comparison to a Monte Carlo estimate with 100 trajectories
from π1, MSE is 85.48 % lower with this improved behav-
ior policy. For π2, the MSE is 31.02 % lower. This result
demonstrates that BPG can ﬁnd behavior policies that sub-
stantially lower MSE.

To understand the disparity in performance between these
two instances of policy evaluation, we plot the distribution
of g(H) under πe (Figures 1c and 1d). These plots show
the variance of π1 to be much higher; it sometimes samples
returns with twice the magnitude of any sampled by π2. To
quantify this difference, we also measure the variance of
IS(H, θi) as E (cid:2)IS(H)2(cid:12)
(cid:3) − E [IS(H)|H ∼ πθi]2
(cid:12)H ∼ πθi
where the expectations are estimated with 10,000 trajecto-

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

(a) Mean Squared Error

(b) Mean Squared Error

(a) Cart-pole Swing Up MSE

(b) Acrobot MSE

(c) Histogram of π1 Returns (d) Histogram of π2 Returns

(e) Variance Reduction

(f) Learning Rate Sensitivity

Figure 1: Gridworld experiments when πe is a partially op-
timized policy, π1, (1a) and a converged policy, π2, (1b).
The ﬁrst and second rows give results for π1 on the left
and π2 on the right. Results are averaged over 100 trials
of 1000 iterations with error bars given for 95 % conﬁ-
dence intervals. In both instances, BPG lowers MSE more
than on-policy Monte Carlo returns (statistically signiﬁ-
cant, p < 0.05). The second row shows the distribution of
returns under the two different πe. Figure 1e shows a sub-
stantial decrease in variance when evaluating π1 with BPG
and a lesser decrease when evaluating π2 with BPG. Fig-
ure 1f shows the effect of varying the step-size parameter
for representative α (BPG diverged for high settings of α).
We ran BPG for 250 iterations per value of α and averaged
over 5 trials. Axes in 1a, 1b, and 1e are log-scaled.

ries. This evaluation is repeated 5 times per iteration and
the reported variance is the mean over these evaluations.
The decrease in variance for each policy is shown in Fig-
ure 1e. The high initial variance means there is much more
room for BPG to improve the behavior policy when θe is
the partially optimized policy.

We also test the sensitivity of BPG to the learning rate pa-
rameter. A critical issue in the use of BPG is selecting the

Figure 2: Mean squared error reduction on the Cart-pole
Swing Up and Acrobot domains. We adapt the behavior
policy for 200 iterations and average results over 100 trials.
Error bars are for 95% conﬁdence intervals.

step size parameter α. If α is set too high we risk mak-
ing too large of an update to θ — potentially stepping to
a worse behavior policy. If we are too conservative then it
will take many iterations for a noticeable improvement over
Monte Carlo estimation. Figure 1f shows variance reduc-
tion for a number of different α values in the GridWorld
domain. We found BPG in this domain was robust to a
variety of step size values. We do not claim this result is
representative for all problem domains; stepsize selection
in the behavior policy search problem is an important area
for future work.

Continuous Control Figure 2 shows reduction of MSE
on the Cartpole Swing-up and Acrobot domains. Again we
see that BPG reduces MSE faster than Monte Carlo eval-
uation. In contrast to the discrete Gridworld experiment,
this experiment demonstrates the applicability of BPG to
the continuous control setting. While BPG signiﬁcantly
outperforms Monte Carlo evaluation in Cart-pole Swing-
up, the gap is much smaller in Acrobot. This result also
demonstrates BPG (and behavior policy search) when the
policy must generalize across different states.

5.3. Control Variate Extensions

In this section, we evaluate the combination of model-
based control variates with behavior policy search. Specif-
ically, we compare the AS estimator with Doubly Robust
BPG (DR-BPG). In these experiments we use a 10x10
stochastic gridworld. The added stochasticity increases the
difﬁculty of building an accurate model from trajectories.

Since these methods require a model we construct this
model in one of two ways. The ﬁrst method uses all trajec-
tories in D to build the model and then uses the same set to
estimate ρ(πe) with ASE or DR. The second method uses
trajectories from the ﬁrst 10 iterations to build the model
and then ﬁxes the model for the remaining iterations. For
DR-BPG, behavior policy search starts at iteration 10 un-

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

5.4. Rareness of Event

Our ﬁnal experiment aims to understand how the gap be-
tween on- and off-policy variance is affected by the prob-
ability of rare events. The intuition for why behavior pol-
icy search can lower the variance of on-policy estimates is
that a well selected behavior policy can cause rare and high
magnitude events to occur. We test this intuition by varying
the probability of a rare, high magnitude event and observ-
ing how this change affects the performance gap between
on- and off-policy evaluation. For this experiment, we use
a variant of the deterministic Gridworld where taking the
UP action in the initial state (the upper left corner) causes
a transition to the terminal state with a reward of +50. We
use π1 from our earlier Gridworld experiments but we vary
the probability of choosing UP when in the initial state. So
with probability p the agent will receive a large reward and
end the trajectory. We use a constant learning rate of 10−5
for all values of p and run BPG for 500 iterations. We plot
the relative decrease of the variance as a function of p over
100 trials for each value of p. We use relative variance to
normalize across problem instances. Note that under this
measure, even when p is close to 1, the relative variance
is not equal to zero because as p approaches 1 the initial
variance also goes to zero.

This experiment illustrates that as the initial variance in-
creases, the amount of improvement BPG can achieve in-
creases. As p becomes closer to 1, the initial variance be-
comes closer to zero and BPG barely improves over the
variance of Monte Carlo (in terms of absolute variance
there is no improvement). When the πe rarely takes the
high rewarding UP action (p close to 0), BPG improves pol-
icy evaluation by increasing the probability of this action.
This experiment supports our intuition for why off-policy
evaluation can outperform on-policy evaluation.

6. Related Work

Behavior policy search and BPG are closely related to
existing work on adaptive importance-sampling. While
adaptive importance-sampling has been studied in the es-
timation literature, we focus here on adaptive importance-
sampling for MDPs and Markov Reward Processes (i.e., an
MDP with a ﬁxed policy). Existing work on adaptive IS
in RL has considered changing the transition probabilities
to lower the variance of policy evaluation (Desai & Glynn,
2001; Frank et al., 2008) or lower the variance of policy
gradient estimates (Ciosek & Whiteson, 2017). Since the
transition probabilities are typically unknown in RL, adapt-
ing the behavior policy is a more general approach to adap-
tive IS. Ciosek and Whiteson also adapt the distribution of
trajectories with gradient descent on the variance (Ciosek
& Whiteson, 2017) with respect to parameters of the transi-
tion probabilities. The main focus of this work is increasing

(a) Control Variate MSE

(b) Rare Event Improvement

Figure 3: 3a: Comparison of DR and ASE on a larger
stochastic Gridworld. For the ﬁxed model methods, the
signiﬁcant drop in MSE at iteration 10 is due to the in-
troduction of the model control variate. For clarity we do
not show error bars. The difference between the ﬁnal esti-
mate of DR-BPG and ASE with the ﬁxed model is statis-
tically signiﬁcant (p < 0.05); the difference between the
same methods with a constantly improving model is not.
3b: Varying the probability of a high rewarding terminal
action in the GridWorld domain. Each point on the horizon-
tal axis is the probability of taking this action. The vertical
axis gives the relative decrease in variance after adapting θ
for 500 iterations. Denoting the initial variance as vi and
the ﬁnal variance as vf , the relative decrease is computed
as vi−vf
. Error bars for 95% conﬁdence intervals are given
vi
but are small.

der this second condition. We call the ﬁrst method “update”
and the second method “ﬁxed.” The update method invali-
dates the theoretical guarantees of these methods but learns
a more accurate model. In both instances, we build maxi-
mum likelihood tabular models.

Figure 3 demonstrates that combining BPG with a model-
based control variate (DR-BPG) can lead to further reduc-
tion of MSE compared to the control variate alone (ASE).
Speciﬁcally, with the ﬁxed model, DR-BPG outperformed
all other methods. DR-BPG using the update method for
building the model performed competitively with ASE al-
though not statistically signiﬁcantly better. We also eval-
uate the ﬁnal learned behavior policy of the ﬁxed model
variant of DR-BPG. For a batch size of 100 trajectories,
the DR estimator with this behavior policy improves upon
the ASE estimator with the same model by 56.9 %.

For DR-BPG, estimating the model with all data still al-
lowed steady progress towards lower variance. This result
is interesting since a changing model changes the surface
of our variance objective and thus gradient descent on the
variance has no theoretical guarantees of convergence. Em-
pirically, we observe that setting the learning rate for DR-
BPG was more challenging for either model type. Thus
while we have shown BPG can be combined with control
variates, more work is needed to produce a robust method.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

the probability of simulated rare events so that policy im-
provement can learn an appropriate response. In contrast,
we address the problem of policy evaluation and differenti-
ate with respect to the (known) policy parameters.

The cross-entropy method (CEM) is a general method for
adaptive importance-sampling. CEM attempts to minimize
the Kullback-Leibler divergence between the current sam-
pling distribution and the optimal sampling distribution. As
discussed in Section 3.1, this optimal behavior policy only
exists under a set of restrictive conditions. In contrast we
adapt the behavior policy by minimizing variance.

Other methods exist for lowering the variance of on-policy
estimates. In addition to the control variate technique used
by the Advantage Sum estimator (Zinkevich et al., 2006;
White & Bowling, 2009), Veness et al. consider using com-
mon random numbers and antithetic variates to reduce the
variance of roll-outs in Monte Carlo Tree Search (MCTS)
(2011). These techniques require a model of the environ-
ment (as is typical for MCTS) and do not appear to be ap-
plicable to the general RL policy evaluation problem. BPG
could potentially be applied to ﬁnd a lower variance roll-
out policy for MCTS.

In this work we have focused on unbiased policy evalua-
tion. When the goal is to minimize MSE it is often per-
missible to use biased methods such as temporal difference
learning (van Seijen & Sutton, 2014), model-based policy
evaluation (Kearns & Singh, 2002; Strehl et al., 2009), or
variants of weighted importance sampling (Precup et al.,
2000). It may be possible to use similar ideas to BPG to
reduce bias and variance although this appears to be dif-
ﬁcult since the bias contribution to the mean squared er-
ror is squared and thus any gradient involving bias requires
knowledge of the estimator’s bias. We leave behavior pol-
icy search with biased off-policy methods to future work.

7. Discussion and Future Work

Our experiments demonstrate that behavior policy search
with BPG can lower the variance of policy evaluation. One
open question is characterizing the settings where adapting
the behavior policy substantially improves over on-policy
estimates. Towards answering this question, our Gridworld
experiment showed that when πe has little variance, BPG
can only offer marginal improvement. BPG increases the
probability of observing rare events with a high magnitude.
If the evaluation policy never sees such events then there
is little beneﬁt to using BPG. However, in expectation and
with an appropriately selected step-size, BPG will never
lower the data-efﬁciency of policy evaluation.

It is also necessary that the evaluation policy contributes to
the variance of the returns. If all variance is due to the en-
vironment then it seems unlikely that BPG will offer much

improvement. For example, Ciosek and Whiteson (2017)
consider a variant of the Mountain Car task where the dy-
namics can trigger a rare event — independent of the action
— in which rewards are multiplied by 1000. No behavior
policy adaptation can lower the variance due to this event.

One limitation of gradient-based BPS methods is the neces-
sity of good step-size selection. In theory, BPG can never
lead to worse policy evaluation compared to on-policy esti-
mates. In practice, a poorly selected step-size may cause a
step to a worse behavior policy at step i which may increase
the variance of the gradient estimate at step i + 1. Future
work could consider methods for adaptive step-sizes, sec-
ond order methods, or natural behavior policy gradients.

One interesting direction for future work is incorporating
behavior policy search into policy improvement. A similar
idea was explored by Ciosek and Whiteson who explored
off-environment learning to improve the performance of
policy gradient methods (2017). The method presented in
that work is limited to simulated environments with differ-
ential dynamics. Adapting the behavior policy is a poten-
tially much more general approach.

8. Conclusion

We have introduced the behavior policy search problem
in order to improve estimation of ρ(πe) for an evaluation
policy πe. We present a solution — Behavior Policy Gra-
dient — for this problem which adapts the behavior pol-
icy with stochastic gradient descent on the variance of the
importance-sampling estimator. Experiments demonstrate
BPG lowers the mean squared error of estimates of ρ(πe)
compared to on-policy estimates. We also demonstrate
BPG can further decrease the MSE of estimates in conjunc-
tion with a model-based control variate method.

9. Acknowledgements

We thank Daniel Brown and the anonymous reviewers for use-
ful comments on the work and its presentation. This work has
taken place in the Personal Autonomous Robotics Lab (PeARL)
and Learning Agents Research Group (LARG) at the Artiﬁcial In-
telligence Laboratory, The University of Texas at Austin. PeARL
research is supported in part by NSF (IIS-1638107, IIS-1617639).
LARG research is supported in part by NSF (CNS-1330072,
CNS-1305287, IIS-1637736, IIS-1651089), ONR (21C184-01),
AFOSR (FA9550-14-1-0087), Raytheon, Toyota, AT&T, and
Lockheed Martin. Josiah Hanna is supported by an NSF Grad-
uate Research Fellowship. Peter Stone serves on the Board of Di-
rectors of Cogitai, Inc. The terms of this arrangement have been
reviewed and approved by the University of Texas at Austin in
accordance with its policy on objectivity in research.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

References

Bastani, Meysam. Model-free intelligent diabetes manage-
ment using machine learning. PhD thesis, Masters the-
sis, Department of Computing Science, University of Al-
berta, 2014.

Bertsekas, Dimitri P. and Tsitsiklis, John N. Gradient con-
vergence in gradient methods with erros. 10:627–642,
2000.

Ciosek, Kamil and Whiteson, Shimon. OFFER: Off-
In Proceedings
environment reinforcement learning.
of the 31st AAAI Conference on Artiﬁcial Intelligence
(AAAI), 2017.

Desai, Paritosh Y and Glynn, Peter W. Simulation in op-
timization and optimization in simulation: A Markov
chain perspective on adaptive Monte Carlo algorithms.
In Proceedings of the 33rd conference on Winter simula-
tion, pp. 379–384. IEEE Computer Society, 2001.

Duan, Yan, Chen, Xi, Houthooft, Rein, Schulman, John,
and Abbeel, Pieter. Benchmarking deep reinforcement
In In Proceedings of
learning for continuous control.
the 33rd International Conference on Machine Learning,
2016.

Frank, Jordan, Mannor, Shie, and Precup, Doina. Rein-
forcement learning in the presence of rare events. In Pro-
ceedings of the 25th International Conference on Ma-
chine learning, pp. 336–343. ACM, 2008.

Hammersley, JM and Handscomb, DC. Monte Carlo meth-

ods, methuen & co. Ltd., London, pp. 40, 1964.

Jiang, Nan and Li, Lihong. Doubly robust off-policy eval-
In Proceedings of
uation for reinforcement learning.
the 33rd International Conference on Machine Learning
(ICML), 2016.

Kearns, Michael and Singh, Satinder. Near-optimal rein-
forcement learning in polynomial time. Machine Learn-
ing, 49(2-3):209–232, 2002.

Lillicrap, Timothy P., Hunt, Jonathan J., Pritzel, Alexander,
Heess, Nicolas, Erez, Tom, Tassa, Yuval, Silver, David,
and Wierstra, Daan. Continuous control with deep rein-
forcement learning. CoRR, abs/1509.02971, 2015.

Precup, D., Sutton, R. S., and Singh, S. Eligibility traces
for off-policy policy evaluation. In Proceedings of the
17th International Conference on Machine Learning, pp.
759–766, 2000.

Schulman, John, Levine, Sergey, Moritz, Philipp, Jordan,
Michael, and Abbeel, Pieter. Trust region policy opti-
mization. In Proceedings of the 32nd International Con-
ference on Machine Learning ( ICML), 2015.

Sen, P.K. and Singer, J.M. Large Sample Methods in Statis-
tics: An Introduction with Applications. Chapman &
Hall, 1993.

Strehl, Alexander L, Li, Lihong, and Littman, Michael L.
Reinforcement learning in ﬁnite mdps: PAC analysis.
Journal of Machine Learning Research, 10:2413–2444,
2009.

Sutton, Richard S. and Barto, Andrew G. Reinforcement

Learning: An Introduction. MIT Press, 1998.

Sutton, Richard S., McAllester, David, Singh, Satinder, and
Mansour, Yishay. Policy gradient methods for reinforce-
ment learning with function approximation. In Proceed-
ings of the 13th Conference on Neural Information Pro-
cessing Systems (NIPS), 2000.

Theocharous, Georgios, Thomas,

and
Philip S.,
Ghavamzadeh, Mohammad.
Personalized ad rec-
ommendation systems for life-time value optimization
In Proceedings of the 27th Inter-
with guarantees.
Intelligence
national Joint Conference on Artiﬁcial
(IJCAI), pp. 1806–1812, 2015.

Thomas, Philip S. A notation for Markov decision pro-

cesses. ArXiv, arXiv:1512.09075v1, 2015.

Thomas, Philip S. and Brunskill, Emma. Data-efﬁcient
off-policy policy evaluation for reinforcement learning.
In Proceedings of the 33rd International Conference on
Machine Learning (ICML), 2016.

Thomas,

Philip S., Theocharous, Georgios,

and
Ghavamzadeh, Mohammad. High conﬁdence off-policy
evaluation. In Proceedings of the AAAI Conference on
Artiﬁcial Intelligence (AAAI), 2015.

van Seijen, Harm and Sutton, Richard S. True online TD
(λ). In Proceedings of the 31st International Conference
on Machine Learning (ICML), volume 14, pp. 692–700,
2014.

Veness, J., Lanctot, M., and Bowling, M. Variance reduc-
tion in Monte-Carlo tree search. In Proceedings of the
24th Conference on Neural Information Processing Sys-
tems, pp. 1836–1844, 2011.

White, M. and Bowling, M. Learning a value analysis tool
for agent evaluation. In Proceedings of the 21st Inter-
national Joint Conference on Artiﬁcial Intelligence (IJ-
CAI), pp. 1976–1981, 2009.

Williams, Ronald J. Simple statistical gradient-following
learning.

algorithms for connectionist reinforcement
Machine learning, 8(3-4):229–256, 1992.

Data-Efﬁcient Policy Evaluation Through Behavior Policy Search

Zinkevich, M., Bowling, M., Bard, N., Kan, M., and
Billings, D. Optimal unbiased estimators for evaluating
agent performance. In Proceedings of the 21st National
Conference on Artiﬁcial Intelligence (AAAI), pp. 573–
578, 2006.

