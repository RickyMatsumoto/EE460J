McGan: Mean and Covariance Feature Matching GAN

Youssef Mroueh * 1 2 Tom Sercu * 1 2 Vaibhava Goel 2

Abstract

We introduce new families of Integral Probabil-
ity Metrics (IPM) for training Generative Adver-
sarial Networks (GAN). Our IPMs are based on
matching statistics of distributions embedded in
a ﬁnite dimensional feature space. Mean and co-
variance feature matching IPMs allow for sta-
ble training of GANs, which we will call Mc-
Gan. McGan minimizes a meaningful loss be-
tween distributions.

1. Introduction

Unsupervised learning of distributions is an important
problem, in which we aim to learn underlying features that
unveil the hidden the structure in the data. The classic ap-
proach to learning distributions is by explicitly parametriz-
ing the data likelihood and ﬁtting this model by maximiz-
ing the likelihood of the real data. An alternative recent ap-
proach is to learn a generative model of the data without ex-
plicit parametrization of the likelihood. Variational Auto-
Encoders (VAE) (Kingma & Welling, 2013) and Generative
Adversarial Networks (GAN) (Goodfellow et al., 2014) fall
under this category.

We focus on the GAN approach. In a nutshell GANs learn
a generator of the data via a min-max game between the
generator and a discriminator, which learns to distinguish
between “real” and “fake” samples. In this work we focus
on the objective function that is being minimized between
the learned generator distribution Pθ and the real data dis-
tribution Pr.
The original work of (Goodfellow et al., 2014) showed that
in GAN this objective is the Jensen-Shannon divergence.
(Nowozin et al., 2016) showed that other ϕ-divergences can
be successfully used. The Maximum Mean Discrepancy
objective (MMD) for GAN training was proposed in (Li

*Equal contribution 1AI Foundations. IBM T.J. Watson Re-
search Center, NY, USA 2Watson Multimodal Algorithms and
Engines Group.
IBM T.J. Watson Research Center, NY, USA.
Correspondence to: Youssef Mroueh <mroueh@us.ibm.com>.

Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

et al., 2015; Dziugaite et al., 2015). As shown empirically
in (Salimans et al., 2016), one can train the GAN discrimi-
nator using the objective of (Goodfellow et al., 2014) while
training the generator using mean feature matching. An en-
ergy based objective for GANs was also developed recently
(Zhao et al., 2017). Finally, closely related to our paper,
the recent work Wasserstein GAN (WGAN) of (Arjovsky
et al., 2017) proposed to use the Earth Moving distance
(EM) as an objective for training GANs. Furthermore (Ar-
jovsky et al., 2017) show that the EM objective has many
advantages as the loss function correlates with the quality
of the generated samples and the mode dropping problem
is reduced in WGAN.

In this paper, inspired by the MMD distance and the kernel
mean embedding of distributions (Muandet et al., 2016) we
propose to embed distributions in a ﬁnite dimensional fea-
ture space and to match them based on their mean and co-
variance feature statistics. Incorporating ﬁrst and second
order statistics has a better chance to capture the various
modes of the distribution. While mean feature matching
was empirically used in (Salimans et al., 2016), we show in
this work that it is theoretically grounded: similarly to the
EM distance in (Arjovsky et al., 2017), mean and covari-
ance feature matching of two distributions can be written
as a distance in the framework of Integral Probability Met-
rics (IPM) (Muller, 1997). To match the means, we can
use any (cid:96)q norm, hence we refer to mean matching IPM, as
IPMµ,q. For matching covariances, in this paper we con-
sider the Ky-Fan norm, which can be computed cheaply
without explicitly constructing the full covariance matrices,
and refer to the corresponding IPM as IPMΣ.

Our technical contributions can be summarized as follows:

a) We show in Section 3 that the (cid:96)q mean feature matching
IPMµ,q has two equivalent primal and dual formulations
and can be used as an objective for GAN training in both
formulations.

b) We show in Section 3.3 that the parametrization used in
Wasserstein GAN corresponds to (cid:96)1 mean feature matching
GAN (IPMµ,1 GAN in our framework).

c) We show in Section 4.2 that the covariance feature
matching IPMΣ admits also two dual formulations, and can
be used as an objective for GAN training.

McGan: Mean and Covariance Feature Matching GAN

d) Similar to Wasserstein GAN, we show that mean feature
matching and covariance matching GANs (McGan) are sta-
ble to train, have a reduced mode dropping and the IPM loss
correlates with the quality of the generated samples.

2. Integral Probability Metrics

We deﬁne in this Section IPMs as a distance between dis-
tribution. Intuitively each IPM ﬁnds a “critic” f (Arjovsky
et al., 2017) which maximally discriminates between the
distributions.

2.1. IPM Deﬁnition

X

Consider a compact space
measurable and bounded real valued functions on
P(

in Rd. Let F be a set of
. Let
) be the set of measurable probability distributions on
), the
X
∈
Integral probability metric (IPM) indexed by the function
space F is deﬁned as follows (Muller, 1997):

X
. Given two probability distributions P, Q

P(

X

X

(cid:12)
(cid:12)
(cid:12)

(cid:111)

dF (P, Q) = sup
F

f

∈

f (x)

E
x
∼P

−

x

E
∼Q

f (x)

.

(cid:12)
(cid:12)
(cid:12)

In this paper we are interested in symmetric function spaces
F , i.e
F , hence we can write the IPM in
−
that case without the absolute value:

f
∀

F ,

∈

∈

f

dF (P, Q) = sup
F

f

∈

E
x
∼P
(cid:110)

f (x)

−

x

E
∼Q

f (x)

.

(1)

It is easy to see that dF deﬁnes a pseudo-metric over
P(X). (dF non-negative, symmetric and satisﬁes the tri-
angle inequality. A pseudo metric means that dF (P, P) =
0 but dF (P, Q) = 0 does not necessarily imply P = Q).
By choosing F appropriately (Sriperumbudur et al., 2012;
2009), various distances between probability measures can
be deﬁned.
In the next subsection following (Arjovsky
et al., 2017; Li et al., 2015; Dziugaite et al., 2015) we show
how to use IPM to learn generative models of distributions,
we then specify a special set of functions F that makes the
learning tractable.

2.2. Learning Generative Models with IPM

In order to learn a generative model of a distribution Pr ∈
P(

), we learn a function

X

gθ :

nz

R

,

→ X

Z ⊂

∼

such that for z
pz, the distribution of gθ(z) is close to the
real data distribution Pr, where pz is a ﬁxed distribution on
N (0, Inz )). Let Pθ be the distribution
pz. Using an IPM indexed by a function class

Z
of gθ(z), z
F we shall solve therefore the following problem:

(for instance z

∼

∼

min
gθ

dF (Pr, Pθ)

(2)

Hence this amounts to solving the following min-max
problem:

min
gθ

sup
F
f

∈

E
x
∼Pr

f (x)

−

z

E
pz
∼

f (gθ(z))

Given samples
zi, 1 . . . M
{
}
cal problem:

and samples
from pz we shall solve the following empiri-

xi, 1 . . . N
{

from Pr

}

min
gθ

sup
F
f

∈

1
N

N

i=1
(cid:88)

f (xi)

1
M

−

M

j=1
(cid:88)

f (gθ(zj)),

in the following we consider for simplicity M = N .

3. Mean Feature Matching GAN

v, Φω(x)
(cid:104)

In this Section we introduce a class of functions F hav-
Rm and Φω :
ing the form
, where vector v
(cid:105)
Rm a non linear feature map (typically parametrized
X →
by a neural network). We show in this Section that the IPM
deﬁned by this function class corresponds to the distance
between the mean of the distribution in the Φω space.

∈

3.1. IPMµ,q: Mean Matching IPM

More formally consider the following function space:

v, Φω(x)
(cid:105)

(cid:104)

v

∈

m,

R

v

(cid:107)

(cid:107)p ≤

1,

Fv,ω,p =

f (x) =
{
R

∈

Ω

,
}

.
(cid:107)

Φω :

m, ω

(cid:12)
(cid:12)
X →
(cid:12)
(cid:107)p is the (cid:96)p norm. Fv,ω,p is the space of bounded
where
linear functions deﬁned in the non linear feature space in-
duced by the parametric feature map Φω. Φω is typically a
multi-layer neural network. The parameter space Ω is cho-
sen so that the function space F is bounded. Note that for
a given ω, Fv,ω,p is a ﬁnite dimensional Hilbert space.

We recall here simple deﬁnitions on dual norms that will be
necessary for the analysis in this Section. Let p, q
],
[1,
∈
∞
such that 1
q = 1. By duality of norms we have:
(cid:107)q =
x
(cid:107)
and the Holder inequality:
v, x
x, y
(cid:105)
(cid:105)
(cid:104)
≤

p + 1

1 (cid:104)

(cid:107)p≤

(cid:12)
(cid:12)
(cid:107)
(cid:12)
From Holder inequality we obtain the following bound:

(cid:12)
(cid:12)
(cid:12)

maxv,
v
(cid:107)
y
x
(cid:107)p (cid:107)

(cid:107)q.

f (x)

=

v, Φωx
(cid:104)

(cid:105)

v
≤ (cid:107)

(cid:107)p (cid:107)

Φω(x)

(cid:107)q ≤ (cid:107)

Φω(x)

(cid:107)q .

(cid:107)

(cid:12)
(cid:12)
(cid:12)

B,

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
Φω(x)

(cid:12)
(cid:12)
To ensure that f is bounded, it is enough to consider Ω such
(cid:12)
that
is
∈ X
bounded it is sufﬁcient to control the norm of the weights
and biases of the neural network Φω by regularizing the
(clamping) or (cid:96)2 norms (weight decay) to ensure the
(cid:96)
∞
boundedness of Fv,ω,p.

. Given that the space

(cid:107)q ≤

X

x

∀

McGan: Mean and Covariance Feature Matching GAN

Figure 1. Motivating example on synthetic data in 2D, showing how different components in covariance matching can target different
regions of the input space. Mean matching (a) is not able to capture the two modes of the bimodal “real” distribution P and assigns
higher values to one of the modes. Covariance matching (b) is composed of the sum of three components (c)+(d)+(e), corresponding
to the top three “critic directions”. Interestingly, the ﬁrst direction (c) focuses on the “fake” data Q, the second direction (d) focuses on
the “real” data, while the third direction (e) is mode selective. This suggests that using covariance matching would help reduce mode
dropping in GAN. In this toy example Φω is a ﬁxed random Fourier feature map (Rahimi & Recht, 2008) of a Gaussian kernel (i.e. a
ﬁnite dimensional approximation).

Now that we ensured the boundedness of Fv,ω,p , we look
at its corresponding IPM:

3.2. Mean Feature Matching GAN

dFv,ω,p(P, Q) = sup

Fv,ω,p

f

∈

f (x)

E
x
∼P

−

x

E
∼Q

f (x)

=

max
v
||

ω

Ω,v,

∈

1

||p≤

(cid:28)

Φω(x)

v, E
x
∼P

−

x

E
∼Q

Φω(x)

(cid:29)

= max
Ω
ω

= max
ω

∈

∈

(cid:104)
Ω (cid:107)

max
v,
v
||p≤
||
µω(P)

1

−

v, E
x
∼P
(cid:28)
(cid:107)q ,
µω(Q)

Φω(x)

Φω(x)

−

E
x
∼Q

(cid:29) (cid:105)

where we used the linearity of the function class and ex-
pectation in the ﬁrst equality and the deﬁnition of the dual
norm
(cid:107)q in the last equality and our deﬁnition of the mean
.
(cid:107)
feature embedding of a distribution P

P(

):

µω(P) = E
∼P

x

Φω(x)

m.

R

X

∈

∈

(cid:105)

(cid:104)
We see that the IPM indexed by Fv,ω,p, corresponds to the
Maximum mean feature Discrepancy between the two dis-
tributions. Where the maximum is taken over the parameter
set Ω, and the discrepancy is measured in the (cid:96)q sense be-
tween the mean feature embedding of P and Q. In other
words this IPM is equal to the worst case (cid:96)q distance be-
tween mean feature embeddings of distributions. We refer
in what follows to dFv,ω,p as IPMµ,q.

We turn now to the problem of learning generative models
with IPMµ,q. Setting F to Fv,ω,p in Equation (2) yields
to the following min-max problem for learning generative
models:

min
gθ

max
Ω
ω
∈

max
1
v
||p≤
||

v,

Lµ(v, ω, θ),

(3)

where

Lµ(v, ω, θ) =

(cid:28)
or equivalently using the dual norm:

Φω(x)

v, E
x
∼Pr

−

z

E
pz
∼

Φω(gθ(z))

,

(cid:29)

min
gθ

max
ω
∈
where µω(Pθ) = E
pz
∼

z

Ω (cid:107)

Φω(gθ(z)).

µω(Pr)

µω(Pθ)

−

(cid:107)q ,

(4)

We refer to formulations (3) and (4) as primal and dual for-
mulation respectively.

The dual formulation in Equation (4) has a simple inter-
pretation as an adversarial learning game: while the fea-
ture space Φω tries to map the mean feature embeddings
of the real distribution Pr and the fake distribution Pθ to
be far apart (maximize the (cid:96)q distance between the mean
embeddings), the generator gθ tries to put them close one
to another. Hence we refer to this IPM as mean matching
IPM.

b)IPM⌃:Levelsetsoff(x)=Pkj=1huj, !(x)ihvj, !(x)ik=3,uj,vjleftandrightsingularvectorsof⌃w(P) ⌃w(Q).a)IPMµ,2:Levelsetsoff(x)=hv⇤, !(x)iv⇤=µw(P) µw(Q)kµw(P) µw(Q)k2.e)hu3, !(x)ihv3, !(x)id)hu2, !(x)ihv2, !(x)iLevelSetsofc)hu1, !(x)ihv1, !(x)iMcGan: Mean and Covariance Feature Matching GAN

}

{

zi, i = 1 . . . N

xi, i = 1 . . . N
{

We devise empirical estimates of both formulations in
Equations (3) and (4), given samples
}
from Pr, and
from pz. The primal for-
mulation (3) is more amenable to stochastic gradient de-
scent since the expectation operation appears in a linear
way in the cost function of Equation (3), while it is non lin-
ear in the cost function of the dual formulation (4) (inside
the norm). We give here the empirical estimate of the pri-
mal formulation by giving empirical estimates ˆLµ(v, ω, θ)
of the primal cost function:

(Pµ) : min
gθ

v,

max
ω
Ω
∈
v
||p≤

||

v,

1(cid:42)

1
N

N

i=1
(cid:88)

Φω(xi)

Φω(gθ(zi))

(cid:43)

1
N

−

N

i=1
(cid:88)

An empirical estimate of the dual formulation can be also
given as follows:

N

1
N

N

1
N

−

Φω(xi)

Φω(gθ(zi))

(Dµ) : min
gθ

max
ω
∈

i=1
(cid:88)

i=1
(cid:88)

Ω (cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
q
(cid:13)
(cid:13)
(cid:13)
In what follows we refer to the problem given in (Pµ) and
(cid:13)
(Dµ) as (cid:96)q Mean Feature Matching GAN. Note that while
(Pµ) does not need real samples for optimizing the gener-
ator, (Dµ) does need samples from real and fake. Further-
more we will need a large minibatch of real data in order
to get a good estimate of the expectation. This makes the
primal formulation more appealing computationally.

3.3. Related Work

We show in this Section that several previous works on
GAN, can be written within the (cid:96)q mean feature matching
IPM (IPMµ,q) minimization framework:

X

a) Wasserstein GAN (WGAN): (Arjovsky et al., 2017) re-
cently introduced Wasserstein GAN. While the main mo-
tivation of this paper is to consider the IPM indexed by
Lipchitz functions on
, we show that the particular
parametrization considered in (Arjovsky et al., 2017) cor-
responds to a mean feature matching IPM.
Indeed (Arjovsky et al., 2017) consider the function set
parametrized by a convolutional neural network with a lin-
ear output layer and weight clipping. Written in our nota-
tion, the last linear layer corresponds to v, and the convo-
lutional neural network below corresponds to Φω. Since v
and ω are simultaneously clamped, this corresponds to re-
stricting v to be in the (cid:96)
unit ball, and to deﬁne in Ω con-
norms of ω. In other words (Arjovsky
straints on the (cid:96)
et al., 2017) consider functions in Fv,ω,p, where p =
∞
. Setting p =
in Equation (3), and q = 1 in Equation
(4), we see that in WGAN we are minimizing dFv,ω,∞, that
corresponds to (cid:96)1 mean feature matching GAN.
b) MMD GAN: Let H be a Reproducing Kernel Hilbert
Space (RKHS) with k its reproducing kernel. For any valid

∞

∞

∞

PSD kernel k there exists an inﬁnite dimensional feature
H such that: k(x, y) =
H .
map Φ :
Φ(x), Φ(y)
(cid:105)
(cid:104)
For an RKHS Φ is noted usually k(x, .) and satisﬁes the
reproducing proprety:

X →

f (x) =

H , for all f

Setting F =
H
has a simple expression:

||

f

f, Φ(x)
(cid:105)
(cid:104)
1
f
||

≤

(cid:9)

H .

∈

in Equation (1) the IPM dF

(cid:8)

(cid:12)
(cid:12)

=

f,

sup
f
H

||
||
µ(P)

dF (P, Q) =

Φ(x)

f, E
x
∼P

−

E
x
∼Q

Φ(x)

(cid:69)(cid:111)
(5)

1

≤

−

(cid:110)(cid:68)
µ(Q)
(cid:12)
(cid:12)
(cid:12)

,

H

∈

(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
H is the so called kernel mean
(cid:12)
(cid:12)
where µ(P) = E
Φ(x)
(cid:12)
(cid:12)
x
∼P
embedding (Muandet et al., 2016). dF in this case is the so
called Maximum kernel Mean Discrepancy (MMD) (Gret-
ton et al., 2012) . Using the reproducing property MMD
has a closed form in term of the kernel k. Note that IPMµ,2
is a special case of MMD when the feature map is ﬁnite
dimensional, with the main difference that the feature map
is ﬁxed in case of MMD and learned in the case of IPMµ,2.
(Li et al., 2015; Dziugaite et al., 2015) showed that GANs
can be learned using MMD with a ﬁxed gaussian kernel.

c) Improved GAN: Building on the pioneering work of
(Goodfellow et al., 2014), (Salimans et al., 2016) suggested
to learn the discriminator with the binary cross entropy cri-
terium of GAN while learning the generator with (cid:96)2 mean
feature matching. The main difference of our IPMµ,2 GAN
is that both “discriminator” and “generator” are learned us-
ing the mean feature matching criterium, with additional
constraints on Φω.

4. Covariance Feature Matching GAN

4.1. IPMΣ: Covariance Matching IPM

As follows from our discussion of mean matching IPM
comparing two distributions amounts to comparing a ﬁrst
order statistics, the mean of their feature embeddings. Here
we ask the question how to incorporate second order statis-
tics, i.e covariance information of feature embeddings.
In this Section we will provide a function space F such
that the IPM in Equation (1) captures second order infor-
mation. Intuitively a distribution of points represented in
a feature space can be approximately captured by its mean
and its covariance. Commonly in unsupervised learning,
this covariance is approximated by its ﬁrst k principal com-
ponents (PCA directions), which capture the directions of
maximal variance in the data. Similarly, the metric we de-
ﬁne in this Section will ﬁnd k directions that maximize
the discrimination between the two covariances. Adding
second order information would enrich the discrimination
power of the feature space (See Figure 1).

McGan: Mean and Covariance Feature Matching GAN

This intuition motivates the following function space of bi-
linear functions in Φω :

4.2. Covariance Matching GAN

k

(cid:104)

j=1
(cid:88)

FU,V,ω =

f (x) =

{

uj, Φω(x)

vj, Φω(x)
(cid:105)

(cid:105) (cid:104)

,
uj}
{

vj} ∈
{

R

m orthonormal j = 1 . . . k, ω

Ω

.

}

∈

Note that the set FU,V,ω is symmetric and hence the IPM
indexed by this set (Equation (1)) is well deﬁned. It is easy
to see that FU,V,ω can be written as:

FU,V,ω =

U, V

R

∈

f (x) =
{
m

U (cid:62)Φω(x), V (cid:62)Φω(x)

)

k, U (cid:62)U = Ik, V (cid:62)V = Ik, ω

(cid:10)

×

(cid:11)
∈

(cid:12)
Ω
(cid:12)
(cid:12)

}

the parameter set Ω is such that the function space remains
bounded. Let

Σω(P) = E
∼P

x

Φω(x)Φω(x)(cid:62),

be the uncentered feature covariance embedding of P. It is
f (x) can be written in terms of U, V,
easy to see that E
∼P
and Σω(P):

x

= T race(U (cid:62)Σω(P)V ).

x

(cid:11)

(cid:10)
∈

Rm
×

U (cid:62)Φ(x), V (cid:62)Φ(x)

f (x) = E
E
x
∼P
∼P
m, we note by σj(A) the singu-
For a matrix A
lar value of A, j = 1 . . . m in descending order. The 1-
schatten norm or the nuclear norm is deﬁned as the sum of
m
singular values,
j=1 σj. We note by [A]k the
(cid:107)∗
k-th rank approximation of A. We note
Rm
M (cid:62)M = Ik}
function set. Let P, Q

∈
. Consider the IPM induced by this

Om,k =

(cid:80)
P(

) we have:

A
(cid:107)

M

=

{

×

k

|

dFU,V,ω (P, Q) = sup

f (x)

E
x
∼P

−

x

E
∼Q

f (x)

∈

X

FU,V,ω

f

∈

f (x)

−

x

E
∼Q

f (x)

= max
E
ω
Ω
x
∼P
∈
U,V
∈Om,k

= max
Ω
ω

∈

max
∈Om,k

U,V

k

= max
Ω
ω

∈

= max
ω

Ω (cid:107)

∈

j=1
(cid:88)
[Σω(P)

σj (Σω(P)

Σω(Q))

(cid:2)

−

Σω(Q)]k(cid:107)∗

,

−

T race

U (cid:62)(Σω(P)

Σω(Q))V

−

(cid:3)

where we used the variational deﬁnition of singular val-
ues and the deﬁnition of the nuclear norm. Note that U, V
are the left and right singular vectors of Σω(P)
Σω(Q).
Hence dFU,V,ω measures the worst case distance between
the covariance feature embeddings of the two distributions,
this distance is measured with the Ky Fan k-norm (nuclear
norm of truncated covariance difference). Hence we call
this IPM covariance matching IPM, IPMΣ.

−

−

z

E
pz
∼

(cid:10)

Turning now to the problem of learning a generative model
gθ of Pr ∈

) using IPMΣ we shall solve:

P(

X

min
gθ

dFU,V,ω (Pr, Pθ),

this has the following primal formulation:

min
gθ

ω

Ω,U,V

∈

∈Om,k

max

Lσ(U, V, ω, θ),

where Lσ(U, V, ω, θ) = E
∼Pr

x

U (cid:62)Φω(x), V (cid:62)Φω(x))

U (cid:62)Φω(gθ(z)), V (cid:62)Φω(gθ(z))

,

(cid:10)

(6)

(cid:11)

(cid:11)

,

∼

−

(7)

Ω (cid:107)

min
gθ

[Σω(Pr)

or equivalently the following dual formulation:
Σω(Pθ)]k(cid:107)∗
pz Φω(gθ(z))Φω(gθ(z))(cid:62).

max
ω
∈
where Σω(Pθ) = Ez
The dual formulation in Equation (7) shows that learning
generative models with IPMΣ, consists in an adversarial
game between the feature map and the generator, when
the feature maps tries to maximize the distance between
the feature covariance embeddings of the distributions, the
generator tries to minimize this distance. Hence we call
learning with IPMΣ, covariance matching GAN.

We give here an empirical estimate of the primal formula-
tion in Equation (6) which is amenable to stochastic gra-
dient. The dual requires nuclear norm minimization and is
more involved. Given
,
pz}
xi, xi ∼
{
the covariance matching GAN can be written as follows:

zj, zj ∼

Pr}

, and

{

min
gθ

ω

Ω,U,V

∈

∈Om,k

max

ˆLσ(U, V, ω, θ),

(8)

where ˆLσ(U, V, ω, θ) =

U (cid:62)Φω(xi), V (cid:62)Φω(xi)

N

1
N

i=1
(cid:88)

(cid:10)

(cid:11)

1
N

−

N

j=1
(cid:88)

U (cid:62)Φω(gθ(zj)), V (cid:62)Φω(gθ(zj))

.

(cid:11)
4.3. Mean and Covariance Matching GAN

(cid:10)

In order to match ﬁrst and second order statistics we pro-
pose the following simple extension:

min
gθ

ω

Ω,v,
∈
U,V

max
v
||p≤
||
∈Om,k

Lµ(v, ω, θ) + Lσ(U, V, ω, θ),
1

that has a simple dual adversarial game interpretation

−

Ω (cid:107)

min
gθ

µω(P)

µω(Pθ)

max
ω
∈

[Σω(Pr)
(cid:107)

Σω(Pθ)]k(cid:107)∗
(cid:107)q +
where the discriminator ﬁnds a feature space that discrim-
inates between means and variances of real and fake, and
the generator tries to match the real statistics. We can also
give empirical estimates of the primal formulation similar
to expressions given in the paper.

−

,

McGan: Mean and Covariance Feature Matching GAN

5. Algorithms

We present in this Section our algorithms for mean and co-
variance feature matching GAN (McGan) with IPMµ,q and
IPMΣ.

∞

Mean Matching GAN. Primal Pµ: We give in Algorithm
1 an algorithm for solving the primal IPMµ,q GAN (Pµ).
Algorithm 1 is adapted from (Arjovsky et al., 2017) and
corresponds to their algorithm for p =
. The main differ-
ence is that we allow projection of v on different (cid:96)p balls,
and we maintain the clipping of ω to ensure boundedness of
)v.
Φω. For example for p = 2, projB(cid:96)2
For p =
we obtain the same clipping in (Arjovsky et al.,
2017) projB(cid:96)∞
−
Dual Dµ: We give in Algorithm 2 an algorithm for solv-
ing the dual formulation IPMµ,q GAN (Dµ). As mentioned
earlier we need samples from “real” and “fake” for training
both generator and the “critic” feature space.

c, c) for c = 1.

(v) = min(1,

(v) = clip(v,

∞

1
v

(cid:107)2

(cid:107)

Covariance Matching GAN. Primal PΣ: We give in Al-
gorithm 3 an algorithm for solving the primal of IPMΣ
GAN (Equation (8)). The algorithm performs a stochas-
tic gradient ascent on (ω, U, V ) and a descent on θ. We
maintain clipping on ω to ensure boundedness of Φω, and
perform a QR retraction on the Stiefel manifold
Om,k (Ab-
sil et al., 2007), maintaining orthonormality of U and V .

Algorithm 1 Mean Matching GAN - Primal (Pµ)

Input: p to deﬁne the ball of v ,η Learning rate, nc
number of iterations for training the critic, c clipping or
weight decay parameter, N batch size
Initialize v, ω, θ
repeat

for j = 1 to nc do

Sample a minibatch xi, i = 1 . . . N, xi ∼
Sample a minibatch zi, i = 1 . . . N, zi ∼
∇v ˆLµ(v, ω, θ),
(gv, gω)
(
(v, ω)
Project v on (cid:96)p ball, B(cid:96)p =
(v)

Pr
pz
∇ω ˆLµ(v, ω, θ))
x,

←
(v, ω) + η RMSProp ((v, ω), (gv, gω))

(cid:107)p ≤

}}

x

{

(cid:107)

1

←
projB(cid:96)p
clip(ω,

−

c, c)

{
v
←
ω
←
end for
Sample zi, i = 1 . . . N, zi ∼
v, 1
dθ ← −∇θ
N
θ
θ
←
until θ converges

η RMSProp (θ, dθ)
(cid:80)

−

(cid:68)

{

pz
N
i=1 Φω(gθ(zi))

(cid:69)

Ensure Φω is bounded

}

6. Experiments

We train McGan for image generation with both Mean
Matching and Covariance Matching objectives. We show
generated images on the labeled faces in the wild (lfw)

Algorithm 2 Mean Matching GAN - Dual (Dµ)

Input: q the matching (cid:96)q norm ,η Learning rate, nc
number of iterations for training the critic, c clipping or
weight decay parameter, N batch size
Initialize v, ω, θ
repeat

for j = 1 to nc do

−

1
N

1
N

(cid:80)

Pr
pz
N
i=1 Φω(gθ(zi))

Sample a minibatch xi, i = 1 . . . N, xi ∼
Sample a minibatch zi, i = 1 . . . N, zi ∼
N
i=1 Φω(xi)
∆ω,θ ←
gω ← ∇ω (cid:107)
∆ω,θ(cid:107)q
(cid:80)
ω + η RMSProp (ω, gω)
ω
←
clip(ω,
ω
c, c)
←
end for
Sample zi, i = 1 . . . N, zi ∼
pz
Sample xi, i = 1 . . . M, xi ∼
Pr (M > N )
N
1
i=1 Φω(gθ(zi))
∆ω,θ ←
N
−
∆ω,θ(cid:107)q
dθ ← ∇θ (cid:107)
(cid:80)
η RMSProp (θ, dθ)
θ
θ
←
until θ converges

Ensure Φω is bounded

M
i=1 Φω(xi)

1
M

(cid:80)

−

−

{

}

Algorithm 3 Covariance Matching GAN - Primal (PΣ)

Input: k the number of components ,η Learning rate, nc
number of iterations for training the critic, c clipping or
weight decay parameter, N batch size
Initialize U, V, ω, θ
repeat

for j = 1 to nc do

Pr
pz

∇ω) ˆLσ(U, V, ω, θ)

Sample a minibatch xi, i = 1 . . . N, xi ∼
Sample a minibatch zi, i = 1 . . . N, zi ∼
G
←
(U, V, ω)

∇V ,
∇U ,
(
(U, V, ω)+η RMSProp ((U, V, ω), G)
←
Project U and V on the Stiefel manifold
{
sign(diag(Ru))
QR(U ) su ←
Qu, Ru ←
sign(diag(Rv))
QR(V ) sv ←
Qv, Rv ←
U
←
V
←
ω
←
end for
Sample zi, i = 1 . . . N, zi ∼
N
dθ ← −∇θ
j=1 (cid:104)
η RMSProp (θ, dθ)
θ
θ
←
until θ converges

QuDiag(su)
QvDiag(sv)
clip(ω,
c, c)

U Φω(gθ(zj)), V Φω(gθ(zj))

Ensure Φω is bounded

Om,k}

(cid:80)

pz

1
N

−

−

{

}

(cid:105)

(Huang et al., 2007), LSUN bedrooms (Yu et al., 2015),
and cifar-10 (Krizhevsky & Hinton, 2009) datasets.

It is well-established that evaluating generative models is
hard (Theis et al., 2016). Many GAN papers rely on a com-
bination of samples for quality evaluation, supplemented
by a number of heuristic quantitative measures. We will
mostly focus on training stability by showing plots of the

McGan: Mean and Covariance Feature Matching GAN

loss function, and will provide generated samples to claim
comparable sample quality between methods, but we will
avoid claiming better sample quality. These samples are all
generated at random and are not cherry-picked.

4

F

×

The design of gθ and Φω are following DCGAN princi-
ples (Radford et al., 2015), with both gθ and Φω being
a convolutional network with batch normalization (Ioffe
& Szegedy, 2015) and ReLU activations. Φω has out-
4. The inner product can then
put size bs
equivalently be implemented as conv(4x4, F->1) or
flatten + Linear(4*4*F -> 1). We generate
32 images on
64
cifar, and train with minibatches of size 64. We follow the
experimental framework and implementation of (Arjovsky
et al., 2017), where we ensure the boundedness of Φω by
0.01, 0.01].
clipping the weights pointwise to the range [

64 images for lfw and LSUN and 32

×

×

×

×

−

Primal versus dual form of mean matching. To illus-
trate the validity of both the primal and dual formulation,
we trained mean matching GANs both in the primal and
dual form, see respectively Algorithm 1 and 2. Samples are
shown in Figure 2. Note that optimizing the dual form is
less efﬁcient and only feasible for mean matching, not for
covariance matching. The primal formulation of IPMµ,1
GAN corresponds to clipping v, i.e. the original WGAN,
while for IPMµ,2 we divide v by its (cid:96)2 norm if it becomes
larger than 1. In the dual, for q = 2 we noticed little differ-
ence between maximizing the (cid:96)2 norm or its square.

We observed that the default learning rates from WGAN
(5e-5) are optimal for both primal and dual formulation.
Figure 3 shows the loss (i.e.
IPM estimate) dropping
steadily for both the primal and dual formulation indepen-
dently of the choice of the (cid:96)q norm. We also observed
that during the whole training process, samples generated
from the same noise vector across iterations, remain sim-
ilar in nature (face identity, bedroom style), while details
and background will evolve. This qualitative observation
indicates valuable stability of the training process.

For the dual formulation (Algorithm 2), we conﬁrmed the
hypothesis that we need a good estimate of µω(Pr) in order
to compute the gradient of the generator
∇θ: we needed to
increase the minibatch size of real threefold to 3
×

64.

Covariance GAN. We now experimentally investigate the
IPM deﬁned by covariance matching. For this section and
the following, we use only the primal formulation, i.e.
with explicit uj and vj orthonormal (Algorithm 3). Fig-
ure 4 and 5 show samples and loss from lfw and LSUN
training respectively. We use Algorithm 3 with k = 16
components. We obtain samples of comparable quality to
the mean matching formulations (Figure 2), and we found
training to be stable independent of hyperparameters like
number of components k varying between 4 and 64.

Figure 2. Samples generated with primal (left) and dual (right)
formulation, in (cid:96)1 (top) and (cid:96)2 (bottom) norm. (A) lfw (B) LSUN.

Figure 3. Plot of the loss of Pµ,1 (i.e. WGAN), Pµ,2 Dµ,1 Dµ,2
during training of lfw, as a function of number of updates to gθ.
Similar to the observation in (Arjovsky et al., 2017), training is
stable and the loss is a useful metric of progress, across the differ-
ent formulations.

02500500075001000012500150001750020000gθupdates0.500.751.001.251.501.75Pµ,1Pµ,2Dµ,1Dµ,2McGan: Mean and Covariance Feature Matching GAN

Figure 4. lfw samples generated with covariance matching and
plot of loss function (IPM estimate) ˆLσ(U, V, ω, θ).

Figure 5. LSUN samples generated with covariance matching and
plot of loss function (IPM estimate) ˆLσ(U, V, ω, θ).

Covariance GAN with labels and conditioning.

×

∈

∈

(cid:105) ∈

RK

Finally, we conduct experiments on the cifar-10 dataset,
where we will leverage the additional label information
by training a GAN with conditional generator gθ(z, y)
with label y
[1, K] supppplied as one-hot vector con-
catenated with noise z. Similar to Infogan (Chen et al.,
2016) and AC-GAN (Odena et al., 2016), we add a
m and will write the logits
new output layer, S
RK. We now optimize a combination of
S, Φω(x)
(cid:104)
the IPM loss and the cross-entropy loss CE(x, y; S, Φω) =
)y]. The critic loss becomes
log [Softmax(
S, Φω(x)
−
(cid:105)
LD = ˆLσ −
lab CE(xi, yi; S, Φω), with
(xi,yi)
hyper-parameter λD. We now sample three minibatches
for each critic update: a labeled batch for the CE term, and
for the IPM a real unlabeled + generated batch.
The generator loss (with hyper-param λG) becomes: LG =
ˆLσ + λG
CE(gθ(zi, yi), yi; S, Φω) which
py
still only requires a single minibatch to compute.

pz,yi∼

(cid:104)
λD

zi∼

(cid:80)

1
N

1
N

∈

(cid:80)

Figure 6. Cifar-10: Class-conditioned generated samples. Within
each column, the random noise z is shared, while within the rows
the GAN is conditioned on the same class: from top to bottom
airplane, automobile, bird, cat, deer, dog, frog, horse, ship, truck.

Table 1. Cifar-10: inception score of our models and baselines.

L1+Sigma
L2+Sigma
Sigma
WGAN
BEGAN (Berthelot et al., 2017)
Impr. GAN “-LS” (Salimans et al., 2016)
Impr. GAN Best (Salimans et al., 2016)

Cond (+L)
7.11
7.27
7.29
3.24

0.04
0.04
0.06
0.02

±
±
±
±

Uncond (+L) Uncond (-L)
0.09
6.93
0.04
6.69
0.04
6.97
0.07
5.21

0.07
0.08
0.10
0.07

6.42
6.35
6.73
6.39
5.62

±
±
±
±

±
±
±
±

±
±

6.83
8.09

0.06
0.07

We conﬁrm the improved stability and sample quality of
objectives including covariance matching with inception
scores (Salimans et al., 2016) in Table 1. Samples cor-
responding to the best inception score (Sigma) are given
in Figure 6. Using the code released with WGAN (Ar-
jovsky et al., 2017), these scores come from the DCGAN
model with n_extra_layers=3 (deeper generator and
discriminator) . More samples are in appendix with com-
binations of Mean and Covariance Matching. Notice rows
corresponding to recognizable classes, while the noise z
(shared within each column) clearly determines other ele-
ments of the visual style like dominant color, across label
conditioning.

7. Discussion

We noticed the inﬂuence of clipping on the capacity of the
critic: a higher number of feature maps was needed to com-
pensate for clipping. The question remains what alterna-
tives to clipping of Φω can ensure the boundedness. For
example, we succesfully used an (cid:96)2 penalty on the weights
of Φω. Other directions are to explore geodesic distances
between the covariances (Arsigny et al., 2006), and ex-
tensions of the IPM framework to the multimodal setting
(Isola et al., 2017).

01000020000300004000050000gθupdates123050000100000150000200000250000300000350000gθupdates123McGan: Mean and Covariance Feature Matching GAN

Muandet, Krikamol, Fukumizu, Kenji, Sriperumbudur,
Kernel mean
Bharath, and Schlkopf, Bernhard.
embedding of distributions: A review and beyond.
arXiv:1605.09522, 2016.

Muller, Alfred. Integral probability metrics and their gen-
erating classes of functions. Advances in Applied Prob-
ability, 1997.

Nowozin, Sebastian, Cseke, Botond, and Tomioka, Ryota.
f-gan: Training generative neural samplers using varia-
tional divergence minimization. In NIPS, 2016.

Odena, Augustus, Olah, Christopher, and Shlens, Jonathon.
Conditional image synthesis with auxiliary classiﬁer
gans. arXiv:1610.09585, 2016.

Radford, Alec, Metz, Luke, and Chintala, Soumith. Unsu-
pervised representation learning with deep convolutional
arXiv:1511.06434,
generative adversarial networks.
2015.

Rahimi, Ali and Recht, Benjamin. Random features for

large-scale kernel machines. In NIPS. 2008.

Salimans, Tim, Goodfellow, Ian, Zaremba, Wojciech, Che-
ung, Vicki, Radford, Alec, Chen, Xi, and Chen, Xi. Im-
proved techniques for training gans. In NIPS. 2016.

Sriperumbudur, Bharath K., Fukumizu, Kenji, Gretton,
Arthur, Schlkopf, Bernhard, and Lanckriet, Gert R. G.
On integral probability metrics, phi -divergences and bi-
nary classiﬁcation, 2009.

Sriperumbudur, Bharath K., Fukumizu, Kenji, Gretton,
Arthur, Schlkopf, Bernhard, and Lanckriet, Gert R. G.
On the empirical estimation of integral probability met-
rics. Electronic Journal of Statistics, 2012.

Theis, Lucas, Oord, A¨aron van den, and Bethge, Matthias.
ICLR,

A note on the evaluation of generative models.
2016.

Yu, Fisher, Zhang, Yinda, Song, Shuran, Seff, Ari, and
Xiao, Jianxiong. Lsun: Construction of a large-scale im-
age dataset using deep learning with humans in the loop.
arXiv:1506.03365, 2015.

References

Absil, P.-A., Mahony, R., and Sepulchre, R. Optimization
Algorithms on Matrix Manifolds. Princeton University
Press, 2007.

Arjovsky, Martin, Chintala, Soumith, and Bottou, Leon.

Wasserstein gan. ICML, 2017.

Arsigny, Vincent, Fillard, Pierre, Pennec, Xavier, and Ay-
ache, Nicholas. Log-euclidean metrics for fast and sim-
ple calculus on diffusion tensors. In Magnetic Resonance
in Medicine, 2006.

Berthelot, David, Schumm, Tom, and Metz, Luke. Began:
Boundary equilibrium generative adversarial networks.
arXiv:1703.10717, 2017.

Chen, Xi, Duan, Yan, Houthooft, Rein, Schulman, John,
Inter-
Sutskever, Ilya, and Abbeel, Pieter.
pretable representation learning by information maxi-
mizing generative adversarial nets. In NIPS, 2016.

Infogan:

Dziugaite, Gintare Karolina, Roy, Daniel M., and Ghahra-
mani, Zoubin. Training generative neural networks via
maximum mean discrepancy optimization. In UAI, 2015.

Goodfellow, Ian, Pouget-Abadie, Jean, Mirza, Mehdi, Xu,
Bing, Warde-Farley, David, Ozair, Sherjil, Courville,
Aaron, and Bengio, Yoshua. Generative adversarial nets.
In NIPS. 2014.

Gretton, Arthur, Borgwardt, Karsten M., Rasch, Malte J.,
Sch¨olkopf, Bernhard, and Smola, Alexander. A kernel
two-sample test. JMLR, 2012.

Huang, Gary B., Ramesh, Manu, Berg, Tamara, and
Learned-Miller, Erik. Labeled faces in the wild: A
database for studying face recognition in unconstrained
environments. Technical report, 2007.

Ioffe, Sergey and Szegedy, Christian. Batch normalization:
Accelerating deep network training by reducing internal
covariate shift. Proc. ICML, 2015.

Isola, Phillip, Zhu, Jun-Yan, Zhou, Tinghui, and Efros,
Alexei A. Image-to-image translation with conditional
adversarial networks. CVPR, 2017.

Krizhevsky, A. and Hinton, G. Learning multiple layers of

features from tiny images. Master’s thesis, 2009.

Li, Yujia, Swersky, Kevin, and Zemel, Richard. Generative

moment matching networks. In ICML, 2015.

Mirza, Mehdi and Osindero, Simon. Conditional genera-

tive adversarial nets. arXiv:1411.1784, 2014.

Kingma, Diederik P. and Welling, Max. Auto-encoding

variational bayes. NIPS, 2013.

Zhao, Junbo, Mathieu, Michael, and Lecun, Yann. Energy
based generative adversarial networks. ICLR, 2017.

